const int max = 1073741824
int a[10000000]
int b[10000000]
int kernelid[10000]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003060000-----------------------------------------
int checkrange ( int checkrange::num )  : 
--------------------------------------------NEXT:0x6000030600e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030600e0-----------------------------------------
.0 : 
	GT		checkrange::num , max --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x6000030601c0,0x6000030602a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030601c0-----------------------------------------
	SUB		checkrange::num , max --> checkrange::num
	JMP		.0
--------------------------------------------NEXT:0x6000030600e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030602a0-----------------------------------------
.1 : 
--------------------------------------------NEXT:0x600003060380---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060380-----------------------------------------
.2 : 
	LT		checkrange::num , 0 --> (int)@2
	IF_NOT_JMP		@2 --> .3
-------------------------------------NEXT:0x600003060460,0x600003060540-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060460-----------------------------------------
	ADD		checkrange::num , max --> checkrange::num
	JMP		.2
--------------------------------------------NEXT:0x600003060380---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060540-----------------------------------------
.3 : 
	RET		checkrange::num

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003060620-----------------------------------------
int reduce ( int reduce::kernelid , int reduce::x , int reduce::y )  : 
	EQ		reduce::kernelid , 0 --> (int)@4
	IF_NOT_JMP		@4 --> .4
-------------------------------------NEXT:0x600003060700,0x6000030607e0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060700-----------------------------------------
	ADD		reduce::x , reduce::y --> (int)@5
	ASSIGN		@5 --> reduce::<inline>checkrange-0::<0>
--------------------------------------------NEXT:0x60000306c1c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c1c0-----------------------------------------
.42 : 
	GT		reduce::<inline>checkrange-0::<0> , max --> (int)@92
	IF_NOT_JMP		@92 --> .43
-------------------------------------NEXT:0x60000306c2a0,0x60000306c380-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c2a0-----------------------------------------
	SUB		reduce::<inline>checkrange-0::<0> , max --> reduce::<inline>checkrange-0::<0>
	JMP		.42
--------------------------------------------NEXT:0x60000306c1c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c380-----------------------------------------
.43 : 
--------------------------------------------NEXT:0x60000306c460---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c460-----------------------------------------
.44 : 
	LT		reduce::<inline>checkrange-0::<0> , 0 --> (int)@93
	IF_NOT_JMP		@93 --> .45
-------------------------------------NEXT:0x60000306c540,0x60000306c620-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c540-----------------------------------------
	ADD		reduce::<inline>checkrange-0::<0> , max --> reduce::<inline>checkrange-0::<0>
	JMP		.44
--------------------------------------------NEXT:0x60000306c460---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c620-----------------------------------------
.45 : 
	NOP
	RET		reduce::<inline>checkrange-0::<0>
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030607e0-----------------------------------------
.4 : 
	EQ		reduce::kernelid , 1 --> (int)@7
	IF_NOT_JMP		@7 --> .9
-------------------------------------NEXT:0x6000030608c0,0x600003060ee0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030608c0-----------------------------------------
	int reduce::if_0::ret
	int reduce::if_0::i
	ASSIGN		0 --> reduce::if_0::ret
	ASSIGN		1 --> reduce::if_0::i
--------------------------------------------NEXT:0x6000030609a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030609a0-----------------------------------------
.5 : 
	LT		reduce::if_0::i , max --> (int)@8
	IF_NOT_JMP		@8 --> .8
-------------------------------------NEXT:0x600003060a80,0x600003060e00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060a80-----------------------------------------
	DIV		reduce::x , reduce::if_0::i --> (int)@9
	MOD		@9 , 2 --> (int)@10
	DIV		reduce::y , reduce::if_0::i --> (int)@11
	MOD		@11 , 2 --> (int)@12
	EQ		@10 , @12 --> (int)@13
	IF_NOT_JMP		@13 --> .6
-------------------------------------NEXT:0x600003060b60,0x600003060c40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060b60-----------------------------------------
	MUL		reduce::if_0::ret , 2 --> reduce::if_0::ret
	JMP		.7
--------------------------------------------NEXT:0x600003060d20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060c40-----------------------------------------
.6 : 
	MUL		reduce::if_0::ret , 2 --> (int)@15
	ADD		@15 , 1 --> reduce::if_0::ret
--------------------------------------------NEXT:0x600003060d20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060d20-----------------------------------------
.7 : 
	MUL		reduce::if_0::i , 2 --> reduce::if_0::i
	JMP		.5
--------------------------------------------NEXT:0x6000030609a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060e00-----------------------------------------
.8 : 
	RET		reduce::if_0::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060ee0-----------------------------------------
.9 : 
	EQ		reduce::kernelid , 2 --> (int)@18
	IF_NOT_JMP		@18 --> .12
-------------------------------------NEXT:0x600003060fc0,0x600003061340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003060fc0-----------------------------------------
	GT		reduce::x , reduce::y --> (int)@19
	IF_NOT_JMP		@19 --> .10
-------------------------------------NEXT:0x6000030610a0,0x600003061180-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030610a0-----------------------------------------
	RET		reduce::x
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061180-----------------------------------------
.10 : 
	RET		reduce::y
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061260-----------------------------------------
.11 : 
--------------------------------------------NEXT:0x600003061340---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061340-----------------------------------------
.12 : 
	EQ		reduce::kernelid , 3 --> (int)@20
	IF_NOT_JMP		@20 --> .18
-------------------------------------NEXT:0x600003061420,0x600003061c00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061420-----------------------------------------
	int reduce::if_1::ret
	int reduce::if_1::i
	ASSIGN		0 --> reduce::if_1::ret
	ASSIGN		1 --> reduce::if_1::i
--------------------------------------------NEXT:0x600003061500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061500-----------------------------------------
.13 : 
	LT		reduce::if_1::i , max --> (int)@21
	IF_NOT_JMP		@21 --> .17
-------------------------------------NEXT:0x6000030615e0,0x600003061b20-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030615e0-----------------------------------------
	DIV		reduce::x , reduce::if_1::i --> (int)@22
	MOD		@22 , 2 --> (int)@23
	EQ		@23 , 1 --> (int)@24
	IF_JMP		@24 --> .14
-------------------------------------NEXT:0x6000030616c0,0x600003061880-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030616c0-----------------------------------------
	DIV		reduce::y , reduce::if_1::i --> (int)@25
	MOD		@25 , 2 --> (int)@26
	EQ		@26 , 1 --> (int)@27
	IF_JMP		@27 --> .14
-------------------------------------NEXT:0x6000030617a0,0x600003061880-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030617a0-----------------------------------------
	JMP		.15
--------------------------------------------NEXT:0x600003061960---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061880-----------------------------------------
.14 : 
	MUL		reduce::if_1::ret , 2 --> (int)@28
	ADD		@28 , 1 --> reduce::if_1::ret
	JMP		.16
--------------------------------------------NEXT:0x600003061a40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061960-----------------------------------------
.15 : 
	MUL		reduce::if_1::ret , 2 --> reduce::if_1::ret
--------------------------------------------NEXT:0x600003061a40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061a40-----------------------------------------
.16 : 
	MUL		reduce::if_1::i , 2 --> reduce::if_1::i
	JMP		.13
--------------------------------------------NEXT:0x600003061500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061b20-----------------------------------------
.17 : 
	RET		reduce::if_1::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061c00-----------------------------------------
.18 : 
	EQ		reduce::kernelid , 4 --> (int)@32
	IF_NOT_JMP		@32 --> .23
-------------------------------------NEXT:0x600003061ce0,0x6000030623e0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061ce0-----------------------------------------
	int reduce::if_2::ret
	int reduce::if_2::i
	ASSIGN		0 --> reduce::if_2::ret
	ASSIGN		1 --> reduce::if_2::i
--------------------------------------------NEXT:0x600003061dc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061dc0-----------------------------------------
.19 : 
	LT		reduce::if_2::i , max --> (int)@33
	IF_NOT_JMP		@33 --> .22
-------------------------------------NEXT:0x600003061ea0,0x600003062300-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061ea0-----------------------------------------
	DIV		reduce::x , reduce::if_2::i --> (int)@34
	MOD		@34 , 2 --> (int)@35
	EQ		@35 , 1 --> (int)@36
	IF_NOT_JMP		@36 --> .20
-------------------------------------NEXT:0x600003061f80,0x600003062140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003061f80-----------------------------------------
	DIV		reduce::y , reduce::if_2::i --> (int)@37
	MOD		@37 , 2 --> (int)@38
	EQ		@38 , 1 --> (int)@39
	IF_NOT_JMP		@39 --> .20
-------------------------------------NEXT:0x600003062060,0x600003062140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062060-----------------------------------------
	MUL		reduce::if_2::ret , 2 --> (int)@40
	ADD		@40 , 1 --> reduce::if_2::ret
	JMP		.21
--------------------------------------------NEXT:0x600003062220---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062140-----------------------------------------
.20 : 
	MUL		reduce::if_2::ret , 2 --> reduce::if_2::ret
--------------------------------------------NEXT:0x600003062220---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062220-----------------------------------------
.21 : 
	MUL		reduce::if_2::i , 2 --> reduce::if_2::i
	JMP		.19
--------------------------------------------NEXT:0x600003061dc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062300-----------------------------------------
.22 : 
	RET		reduce::if_2::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030623e0-----------------------------------------
.23 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000030624c0-----------------------------------------
int getvalue ( int getvalue::array[0] , int getvalue::n , int getvalue::m , int getvalue::x , int getvalue::y )  : 
	LT		getvalue::x , 0 --> (int)@44
	IF_JMP		@44 --> .24
-------------------------------------NEXT:0x6000030625a0,0x600003062920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030625a0-----------------------------------------
	LT		getvalue::y , 0 --> (int)@45
	IF_JMP		@45 --> .24
-------------------------------------NEXT:0x600003062680,0x600003062920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062680-----------------------------------------
	GE		getvalue::x , getvalue::n --> (int)@46
	IF_JMP		@46 --> .24
-------------------------------------NEXT:0x600003062760,0x600003062920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062760-----------------------------------------
	GE		getvalue::y , getvalue::m --> (int)@47
	IF_JMP		@47 --> .24
-------------------------------------NEXT:0x600003062840,0x600003062920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062840-----------------------------------------
	JMP		.25
--------------------------------------------NEXT:0x600003062a00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062920-----------------------------------------
.24 : 
	RET		0
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062a00-----------------------------------------
.25 : 
	MUL		getvalue::x , getvalue::m --> (int)@48
	ADD		@48 , getvalue::y --> (int)@51
	RET		getvalue::array[@51]

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003062ae0-----------------------------------------
int convn ( int convn::kernelid , int convn::input[0] , int convn::output[0] , int convn::n , int convn::m , int convn::c )  : 
	int convn::i
	int convn::j
	int convn::x
	int convn::y
	int convn::curr
	const int convn::true = 1
	ASSIGN		0 --> convn::i
	ASSIGN		0 --> convn::j
	DIV		convn::c , 2 --> (int)@52
	DIV		convn::c , 2 --> (int)@54
	DIV		convn::c , 2 --> (int)@63
	DIV		convn::c , 2 --> (int)@59
--------------------------------------------NEXT:0x600003062bc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062bc0-----------------------------------------
.26 : 
	ASSIGN		0 --> convn::j
	ADD		convn::i , @63 --> (int)@64
	MUL		convn::i , convn::m --> (int)@66
--------------------------------------------NEXT:0x600003062ca0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062ca0-----------------------------------------
.27 : 
	ASSIGN		0 --> convn::curr
	NOP
	SUB		convn::i , @52 --> convn::x
	ADD		convn::j , @59 --> (int)@60
--------------------------------------------NEXT:0x600003062d80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062d80-----------------------------------------
.28 : 
	NOP
	SUB		convn::j , @54 --> convn::y
--------------------------------------------NEXT:0x600003062e60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062e60-----------------------------------------
.29 : 
	CALL		getvalue ( convn::input , convn::n , convn::m , convn::x , convn::y )  --> (int)@56
	EQ		convn::kernelid , 0 --> (int)@94
	IF_NOT_JMP		@94 --> .46
-------------------------------------NEXT:0x60000306c700,0x60000306cd20-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c700-----------------------------------------
	ADD		convn::curr , @56 --> (int)@95
	ASSIGN		@95 --> convn::<inline>reduce-0::<0>
--------------------------------------------NEXT:0x60000306c7e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c7e0-----------------------------------------
.47 : 
	GT		convn::<inline>reduce-0::<0> , max --> (int)@96
	IF_NOT_JMP		@96 --> .48
-------------------------------------NEXT:0x60000306c8c0,0x60000306c9a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c8c0-----------------------------------------
	SUB		convn::<inline>reduce-0::<0> , max --> convn::<inline>reduce-0::<0>
	JMP		.47
--------------------------------------------NEXT:0x60000306c7e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c9a0-----------------------------------------
.48 : 
--------------------------------------------NEXT:0x60000306ca80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306ca80-----------------------------------------
.49 : 
	LT		convn::<inline>reduce-0::<0> , 0 --> (int)@97
	IF_NOT_JMP		@97 --> .50
-------------------------------------NEXT:0x60000306cb60,0x60000306cc40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306cb60-----------------------------------------
	ADD		convn::<inline>reduce-0::<0> , max --> convn::<inline>reduce-0::<0>
	JMP		.49
--------------------------------------------NEXT:0x60000306ca80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306cc40-----------------------------------------
.50 : 
	NOP
	ASSIGN		convn::<inline>reduce-0::<0> --> convn::curr
	JMP		.70
--------------------------------------------NEXT:0x60000306ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306cd20-----------------------------------------
.46 : 
	EQ		convn::kernelid , 1 --> (int)@99
	IF_NOT_JMP		@99 --> .51
-------------------------------------NEXT:0x60000306ce00,0x60000306d420-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306ce00-----------------------------------------
	int convn::<inline>reduce-0::<1>
	int convn::<inline>reduce-0::<2>
	ASSIGN		0 --> convn::<inline>reduce-0::<1>
	ASSIGN		1 --> convn::<inline>reduce-0::<2>
--------------------------------------------NEXT:0x60000306cee0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306cee0-----------------------------------------
.52 : 
	LT		convn::<inline>reduce-0::<2> , max --> (int)@100
	IF_NOT_JMP		@100 --> .53
-------------------------------------NEXT:0x60000306cfc0,0x60000306d340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306cfc0-----------------------------------------
	DIV		convn::curr , convn::<inline>reduce-0::<2> --> (int)@101
	MOD		@101 , 2 --> (int)@102
	DIV		@56 , convn::<inline>reduce-0::<2> --> (int)@103
	MOD		@103 , 2 --> (int)@104
	EQ		@102 , @104 --> (int)@105
	IF_NOT_JMP		@105 --> .54
-------------------------------------NEXT:0x60000306d0a0,0x60000306d180-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d0a0-----------------------------------------
	MUL		convn::<inline>reduce-0::<1> , 2 --> convn::<inline>reduce-0::<1>
	JMP		.55
--------------------------------------------NEXT:0x60000306d260---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d180-----------------------------------------
.54 : 
	MUL		convn::<inline>reduce-0::<1> , 2 --> (int)@106
	ADD		@106 , 1 --> convn::<inline>reduce-0::<1>
--------------------------------------------NEXT:0x60000306d260---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d260-----------------------------------------
.55 : 
	MUL		convn::<inline>reduce-0::<2> , 2 --> convn::<inline>reduce-0::<2>
	JMP		.52
--------------------------------------------NEXT:0x60000306cee0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d340-----------------------------------------
.53 : 
	ASSIGN		convn::<inline>reduce-0::<1> --> convn::curr
	JMP		.70
--------------------------------------------NEXT:0x60000306ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d420-----------------------------------------
.51 : 
	EQ		convn::kernelid , 2 --> (int)@107
	IF_NOT_JMP		@107 --> .56
-------------------------------------NEXT:0x60000306d500,0x60000306d880-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d500-----------------------------------------
	GT		convn::curr , @56 --> (int)@108
	IF_NOT_JMP		@108 --> .57
-------------------------------------NEXT:0x60000306d5e0,0x60000306d6c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d5e0-----------------------------------------
	ASSIGN		convn::curr --> convn::curr
	JMP		.70
--------------------------------------------NEXT:0x60000306ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d6c0-----------------------------------------
.57 : 
	ASSIGN		@56 --> convn::curr
	JMP		.70
--------------------------------------------NEXT:0x60000306ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d7a0-----------------------------------------
.58 : 
--------------------------------------------NEXT:0x60000306d880---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d880-----------------------------------------
.56 : 
	EQ		convn::kernelid , 3 --> (int)@109
	IF_NOT_JMP		@109 --> .59
-------------------------------------NEXT:0x60000306d960,0x60000306e140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306d960-----------------------------------------
	int convn::<inline>reduce-0::<3>
	int convn::<inline>reduce-0::<4>
	ASSIGN		0 --> convn::<inline>reduce-0::<3>
	ASSIGN		1 --> convn::<inline>reduce-0::<4>
--------------------------------------------NEXT:0x60000306da40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306da40-----------------------------------------
.60 : 
	LT		convn::<inline>reduce-0::<4> , max --> (int)@110
	IF_NOT_JMP		@110 --> .61
-------------------------------------NEXT:0x60000306db20,0x60000306e060-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306db20-----------------------------------------
	DIV		convn::curr , convn::<inline>reduce-0::<4> --> (int)@111
	MOD		@111 , 2 --> (int)@112
	EQ		@112 , 1 --> (int)@113
	IF_JMP		@113 --> .62
-------------------------------------NEXT:0x60000306dc00,0x60000306ddc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306dc00-----------------------------------------
	DIV		@56 , convn::<inline>reduce-0::<4> --> (int)@114
	MOD		@114 , 2 --> (int)@115
	EQ		@115 , 1 --> (int)@116
	IF_JMP		@116 --> .62
-------------------------------------NEXT:0x60000306dce0,0x60000306ddc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306dce0-----------------------------------------
	JMP		.63
--------------------------------------------NEXT:0x60000306dea0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306ddc0-----------------------------------------
.62 : 
	MUL		convn::<inline>reduce-0::<3> , 2 --> (int)@117
	ADD		@117 , 1 --> convn::<inline>reduce-0::<3>
	JMP		.64
--------------------------------------------NEXT:0x60000306df80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306dea0-----------------------------------------
.63 : 
	MUL		convn::<inline>reduce-0::<3> , 2 --> convn::<inline>reduce-0::<3>
--------------------------------------------NEXT:0x60000306df80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306df80-----------------------------------------
.64 : 
	MUL		convn::<inline>reduce-0::<4> , 2 --> convn::<inline>reduce-0::<4>
	JMP		.60
--------------------------------------------NEXT:0x60000306da40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e060-----------------------------------------
.61 : 
	ASSIGN		convn::<inline>reduce-0::<3> --> convn::curr
	JMP		.70
--------------------------------------------NEXT:0x60000306ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e140-----------------------------------------
.59 : 
	EQ		convn::kernelid , 4 --> (int)@118
	IF_NOT_JMP		@118 --> .65
-------------------------------------NEXT:0x60000306e220,0x60000306e920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e220-----------------------------------------
	int convn::<inline>reduce-0::<5>
	int convn::<inline>reduce-0::<6>
	ASSIGN		0 --> convn::<inline>reduce-0::<5>
	ASSIGN		1 --> convn::<inline>reduce-0::<6>
--------------------------------------------NEXT:0x60000306e300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e300-----------------------------------------
.66 : 
	LT		convn::<inline>reduce-0::<6> , max --> (int)@119
	IF_NOT_JMP		@119 --> .67
-------------------------------------NEXT:0x60000306e3e0,0x60000306e840-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e3e0-----------------------------------------
	DIV		convn::curr , convn::<inline>reduce-0::<6> --> (int)@120
	MOD		@120 , 2 --> (int)@121
	EQ		@121 , 1 --> (int)@122
	IF_NOT_JMP		@122 --> .68
-------------------------------------NEXT:0x60000306e4c0,0x60000306e680-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e4c0-----------------------------------------
	DIV		@56 , convn::<inline>reduce-0::<6> --> (int)@123
	MOD		@123 , 2 --> (int)@124
	EQ		@124 , 1 --> (int)@125
	IF_NOT_JMP		@125 --> .68
-------------------------------------NEXT:0x60000306e5a0,0x60000306e680-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e5a0-----------------------------------------
	MUL		convn::<inline>reduce-0::<5> , 2 --> (int)@126
	ADD		@126 , 1 --> convn::<inline>reduce-0::<5>
	JMP		.69
--------------------------------------------NEXT:0x60000306e760---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e680-----------------------------------------
.68 : 
	MUL		convn::<inline>reduce-0::<5> , 2 --> convn::<inline>reduce-0::<5>
--------------------------------------------NEXT:0x60000306e760---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e760-----------------------------------------
.69 : 
	MUL		convn::<inline>reduce-0::<6> , 2 --> convn::<inline>reduce-0::<6>
	JMP		.66
--------------------------------------------NEXT:0x60000306e300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e840-----------------------------------------
.67 : 
	ASSIGN		convn::<inline>reduce-0::<5> --> convn::curr
	JMP		.70
--------------------------------------------NEXT:0x60000306ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306e920-----------------------------------------
.65 : 
	ASSIGN		0 --> convn::curr
	JMP		.70
--------------------------------------------NEXT:0x60000306ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306ea00-----------------------------------------
.70 : 
	ADD		convn::y , 1 --> convn::y
	NOP
	NOP
	GE		convn::y , @60 --> (int)@61
	IF_NOT_JMP		@61 --> .30
-------------------------------------NEXT:0x600003062f40,0x600003063020-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003062f40-----------------------------------------
	JMP		.31
--------------------------------------------NEXT:0x600003063100---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063020-----------------------------------------
.30 : 
	JMP		.29
--------------------------------------------NEXT:0x600003062e60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063100-----------------------------------------
.31 : 
	ADD		convn::x , 1 --> convn::x
	NOP
	NOP
	GE		convn::x , @64 --> (int)@65
	IF_NOT_JMP		@65 --> .32
-------------------------------------NEXT:0x6000030631e0,0x6000030632c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030631e0-----------------------------------------
	JMP		.33
--------------------------------------------NEXT:0x6000030633a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030632c0-----------------------------------------
.32 : 
	JMP		.28
--------------------------------------------NEXT:0x600003062d80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030633a0-----------------------------------------
.33 : 
	NOP
	ADD		@66 , convn::j --> (int)@69
	ASSIGN		convn::curr --> convn::output[@69]
	ADD		convn::j , 1 --> convn::j
	GE		convn::j , convn::m --> (int)@71
	IF_NOT_JMP		@71 --> .34
-------------------------------------NEXT:0x600003063480,0x600003063560-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063480-----------------------------------------
	JMP		.35
--------------------------------------------NEXT:0x600003063640---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063560-----------------------------------------
.34 : 
	JMP		.27
--------------------------------------------NEXT:0x600003062ca0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063640-----------------------------------------
.35 : 
	ADD		convn::i , 1 --> convn::i
	GE		convn::i , convn::n --> (int)@73
	IF_NOT_JMP		@73 --> .36
-------------------------------------NEXT:0x600003063720,0x600003063800-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063720-----------------------------------------
	JMP		.37
--------------------------------------------NEXT:0x6000030638e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063800-----------------------------------------
.36 : 
	JMP		.26
--------------------------------------------NEXT:0x600003062bc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000030638e0-----------------------------------------
.37 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000030639c0-----------------------------------------
void memmove ( int memmove::dst[0] , int memmove::src[0] , int memmove::n )  : 
	int memmove::i
	ASSIGN		0 --> memmove::i
--------------------------------------------NEXT:0x600003063aa0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063aa0-----------------------------------------
.38 : 
	LT		memmove::i , memmove::n --> (int)@74
	IF_NOT_JMP		@74 --> .39
-------------------------------------NEXT:0x600003063b80,0x600003063c60-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063b80-----------------------------------------
	NOP
	NOP
	ASSIGN		memmove::src[memmove::i] --> memmove::dst[memmove::i]
	ADD		memmove::i , 1 --> memmove::i
	JMP		.38
--------------------------------------------NEXT:0x600003063aa0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063c60-----------------------------------------
.39 : 
	RET

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003063d40-----------------------------------------
int main (  )  : 
	int main::c
	int main::n
	int main::m
	int main::task
	int main::i
	CALL		getint (  )  --> (int)@80
	CALL		getint (  )  --> (int)@81
	CALL		getint (  )  --> (int)@82
	ASSIGN		@80 --> main::c
	ASSIGN		@81 --> main::n
	ASSIGN		@82 --> main::m
	CALL		getarray ( a )  --> (int)@83
	CALL		getarray ( kernelid )  --> (int)@84
	ASSIGN		@84 --> main::task
	CALL		_sysy_starttime ( 109 ) 
	ASSIGN		0 --> main::i
	MUL		main::n , main::m --> (int)@89
--------------------------------------------NEXT:0x600003063e20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063e20-----------------------------------------
.40 : 
	LT		main::i , main::task --> (int)@85
	IF_NOT_JMP		@85 --> .41
-------------------------------------NEXT:0x600003063f00,0x60000306c000-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003063f00-----------------------------------------
	NOP
	CALL		convn ( kernelid[main::i] , a , b , main::n , main::m , main::c )  --> (int)@88
	NOP
	CALL		memmove ( a , b , @89 ) 
	ADD		main::i , 1 --> main::i
	JMP		.40
--------------------------------------------NEXT:0x600003063e20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000306c000-----------------------------------------
.41 : 
	CALL		_sysy_stoptime ( 116 ) 
	MUL		main::n , main::m --> (int)@91
	CALL		putarray ( @91 , a ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
