int n
int a[10000000]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000271c000-----------------------------------------
int meanless_calculation ( int meanless_calculation::x , int meanless_calculation::y )  : 
	int meanless_calculation::i
	int meanless_calculation::ret
	ASSIGN		0 --> meanless_calculation::i
	ASSIGN		0 --> meanless_calculation::ret
--------------------------------------------NEXT:0x60000271c0e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c0e0-----------------------------------------
.0 : 
	LT		meanless_calculation::i , meanless_calculation::x --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x60000271c1c0,0x60000271c380-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c1c0-----------------------------------------
	LT		meanless_calculation::i , meanless_calculation::y --> (int)@1
	IF_NOT_JMP		@1 --> .1
-------------------------------------NEXT:0x60000271c2a0,0x60000271c380-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c2a0-----------------------------------------
	ADD		meanless_calculation::i , 1 --> (int)@2
	ASSIGN		@2 --> meanless_calculation::i
	ADD		meanless_calculation::ret , meanless_calculation::x --> (int)@3
	ADD		@3 , @2 --> (int)@4
	ASSIGN		@4 --> meanless_calculation::ret
	JMP		.0
--------------------------------------------NEXT:0x60000271c0e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c380-----------------------------------------
.1 : 
	RET		meanless_calculation::ret

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000271c460-----------------------------------------
int swap ( int swap::arr[0] , int swap::l , int swap::r )  : 
	int swap::curr
	int swap::<inline>meanless_calculation-0::<0>
	int swap::<inline>meanless_calculation-0::<1>
	NOP
	NOP
	ASSIGN		swap::arr[swap::l] --> swap::curr
	NOP
	NOP
	NOP
	NOP
	ASSIGN		swap::arr[swap::r] --> swap::arr[swap::l]
	NOP
	NOP
	ASSIGN		swap::curr --> swap::arr[swap::r]
	ASSIGN		0 --> swap::<inline>meanless_calculation-0::<0>
	ASSIGN		0 --> swap::<inline>meanless_calculation-0::<1>
--------------------------------------------NEXT:0x60000271d960---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d960-----------------------------------------
.14 : 
	LT		swap::<inline>meanless_calculation-0::<0> , swap::l --> (int)@47
	IF_NOT_JMP		@47 --> .15
-------------------------------------NEXT:0x60000271da40,0x60000271dc00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271da40-----------------------------------------
	LT		swap::<inline>meanless_calculation-0::<0> , swap::r --> (int)@48
	IF_NOT_JMP		@48 --> .15
-------------------------------------NEXT:0x60000271db20,0x60000271dc00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271db20-----------------------------------------
	ADD		swap::<inline>meanless_calculation-0::<0> , 1 --> (int)@49
	ASSIGN		@49 --> swap::<inline>meanless_calculation-0::<0>
	ADD		swap::<inline>meanless_calculation-0::<1> , swap::l --> (int)@50
	ADD		@50 , @49 --> (int)@51
	ASSIGN		@51 --> swap::<inline>meanless_calculation-0::<1>
	JMP		.14
--------------------------------------------NEXT:0x60000271d960---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271dc00-----------------------------------------
.15 : 
	NOP
	RET		swap::<inline>meanless_calculation-0::<1>

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000271c540-----------------------------------------
int median ( int median::arr[0] , int median::begin , int median::end , int median::pos )  : 
	int median::pivot
	int median::l
	int median::r
	int median::xx
	NOP
	NOP
	ASSIGN		median::arr[median::begin] --> median::pivot
	ASSIGN		median::begin --> median::l
	ADD		median::end , 1 --> (int)@16
	ASSIGN		@16 --> median::r
	ASSIGN		0 --> median::xx
--------------------------------------------NEXT:0x60000271c620---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c620-----------------------------------------
.2 : 
--------------------------------------------NEXT:0x60000271c700---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c700-----------------------------------------
.3 : 
	LT		median::l , median::r --> (int)@17
	IF_NOT_JMP		@17 --> .5
-------------------------------------NEXT:0x60000271c7e0,0x60000271ca80-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c7e0-----------------------------------------
	SUB		median::r , 1 --> (int)@18
	ASSIGN		@18 --> median::r
	NOP
	NOP
	LT		median::arr[@18] , median::pivot --> (int)@21
	IF_NOT_JMP		@21 --> .4
-------------------------------------NEXT:0x60000271c8c0,0x60000271c9a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c8c0-----------------------------------------
	JMP		.5
--------------------------------------------NEXT:0x60000271ca80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271c9a0-----------------------------------------
.4 : 
	ADD		median::xx , 1 --> (int)@22
	ASSIGN		@22 --> median::xx
	JMP		.3
--------------------------------------------NEXT:0x60000271c700---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271ca80-----------------------------------------
.5 : 
--------------------------------------------NEXT:0x60000271cb60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271cb60-----------------------------------------
.6 : 
	LT		median::l , median::r --> (int)@23
	IF_NOT_JMP		@23 --> .8
-------------------------------------NEXT:0x60000271cc40,0x60000271cee0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271cc40-----------------------------------------
	ADD		median::l , 1 --> (int)@24
	ASSIGN		@24 --> median::l
	NOP
	NOP
	GE		median::arr[@24] , median::pivot --> (int)@27
	IF_NOT_JMP		@27 --> .7
-------------------------------------NEXT:0x60000271cd20,0x60000271ce00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271cd20-----------------------------------------
	JMP		.8
--------------------------------------------NEXT:0x60000271cee0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271ce00-----------------------------------------
.7 : 
	SUB		median::xx , 1 --> (int)@28
	ASSIGN		@28 --> median::xx
	JMP		.6
--------------------------------------------NEXT:0x60000271cb60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271cee0-----------------------------------------
.8 : 
	EQ		median::l , median::r --> (int)@29
	IF_NOT_JMP		@29 --> .9
-------------------------------------NEXT:0x60000271cfc0,0x60000271d180-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271cfc0-----------------------------------------
	JMP		.11
--------------------------------------------NEXT:0x60000271d340---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d0a0-----------------------------------------
	JMP		.10
--------------------------------------------NEXT:0x60000271d260---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d180-----------------------------------------
.9 : 
	CALL		swap ( median::arr , median::l , median::r )  --> (int)@30
--------------------------------------------NEXT:0x60000271d260---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d260-----------------------------------------
.10 : 
	JMP		.2
--------------------------------------------NEXT:0x60000271c620---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d340-----------------------------------------
.11 : 
	NOP
	NOP
	ASSIGN		median::pivot --> median::arr[median::begin]
	CALL		swap ( median::arr , median::begin , median::l )  --> (int)@33
	GT		median::l , median::pos --> (int)@34
	IF_NOT_JMP		@34 --> .12
-------------------------------------NEXT:0x60000271d420,0x60000271d500-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d420-----------------------------------------
	CALL		median ( median::arr , median::begin , median::l , median::pos )  --> (int)@35
	RET		@35
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d500-----------------------------------------
.12 : 
	LT		median::l , median::pos --> (int)@36
	IF_NOT_JMP		@36 --> .13
-------------------------------------NEXT:0x60000271d5e0,0x60000271d6c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d5e0-----------------------------------------
	ADD		median::l , 1 --> (int)@37
	CALL		median ( median::arr , @37 , median::end , median::pos )  --> (int)@38
	RET		@38
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000271d6c0-----------------------------------------
.13 : 
	RET		median::xx

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000271d7a0-----------------------------------------
int main (  )  : 
	CALL		getarray ( a )  --> (int)@39
	ASSIGN		@39 --> n
	CALL		_sysy_starttime ( 59 ) 
	SUB		@39 , 1 --> (int)@40
	DIV		@39 , 2 --> (int)@41
	NOP
	CALL		median ( a , 0 , @40 , @41 )  --> (int)@42
	CALL		_sysy_stoptime ( 61 ) 
	CALL		putarray ( @39 , a ) 
	NOP
	NOP
	MOD		a[@41] , 256 --> (int)@46
	RET		@46

------------------------------------------------------------------------------------------------------------
============================================================================================================
