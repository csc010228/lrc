int M
int L
int N

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600001898090-----------------------------------------
int add ( float add::a0[0] , float add::a1[0] , float add::a2[0] , float add::b0[0] , float add::b1[0] , float add::b2[0] , float add::c0[0] , float add::c1[0] , float add::c2[0] )  : 
	int add::i
	ASSIGN		0 --> add::i
--------------------------------------------NEXT:0x600001898240---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898240-----------------------------------------
.0 : 
	LT		add::i , M --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x6000018982d0,0x600001898360-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000018982d0-----------------------------------------
	ASSIGN		add::i --> (int)@1
	ASSIGN		@1 --> (int)@2
	ASSIGN		add::i --> (int)@3
	ASSIGN		@3 --> (int)@4
	ASSIGN		add::i --> (int)@5
	ASSIGN		@5 --> (int)@6
	ADD		add::a0[@4] , add::b0[@6] --> (float)@7
	ASSIGN		@7 --> add::c0[@2]
	ASSIGN		add::i --> (int)@8
	ASSIGN		@8 --> (int)@9
	ASSIGN		add::i --> (int)@10
	ASSIGN		@10 --> (int)@11
	ASSIGN		add::i --> (int)@12
	ASSIGN		@12 --> (int)@13
	ADD		add::a1[@11] , add::b1[@13] --> (float)@14
	ASSIGN		@14 --> add::c1[@9]
	ASSIGN		add::i --> (int)@15
	ASSIGN		@15 --> (int)@16
	ASSIGN		add::i --> (int)@17
	ASSIGN		@17 --> (int)@18
	ASSIGN		add::i --> (int)@19
	ASSIGN		@19 --> (int)@20
	ADD		add::a2[@18] , add::b2[@20] --> (float)@21
	ASSIGN		@21 --> add::c2[@16]
	ADD		add::i , 1 --> (int)@22
	ASSIGN		@22 --> add::i
	JMP		.0
--------------------------------------------NEXT:0x600001898240---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898360-----------------------------------------
.1 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000018983f0-----------------------------------------
int main (  )  : 
	ASSIGN		3 --> N
	ASSIGN		3 --> M
	ASSIGN		3 --> L
	float main::a0[3]
	float main::a1[3]
	float main::a2[3]
	float main::b0[3]
	float main::b1[3]
	float main::b2[3]
	float main::c0[6]
	float main::c1[3]
	float main::c2[3]
	int main::i
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x600001898480---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898480-----------------------------------------
.2 : 
	LT		main::i , M --> (int)@23
	IF_NOT_JMP		@23 --> .3
-------------------------------------NEXT:0x600001898510,0x6000018985a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898510-----------------------------------------
	ASSIGN		main::i --> (int)@24
	ASSIGN		@24 --> (int)@25
	ASSIGN		main::i --> main::a0[@25]
	ASSIGN		main::i --> (int)@26
	ASSIGN		@26 --> (int)@27
	ASSIGN		main::i --> main::a1[@27]
	ASSIGN		main::i --> (int)@28
	ASSIGN		@28 --> (int)@29
	ASSIGN		main::i --> main::a2[@29]
	ASSIGN		main::i --> (int)@30
	ASSIGN		@30 --> (int)@31
	ASSIGN		main::i --> main::b0[@31]
	ASSIGN		main::i --> (int)@32
	ASSIGN		@32 --> (int)@33
	ASSIGN		main::i --> main::b1[@33]
	ASSIGN		main::i --> (int)@34
	ASSIGN		@34 --> (int)@35
	ASSIGN		main::i --> main::b2[@35]
	ADD		main::i , 1 --> (int)@36
	ASSIGN		@36 --> main::i
	JMP		.2
--------------------------------------------NEXT:0x600001898480---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000018985a0-----------------------------------------
.3 : 
	CALL		add ( main::a0 , main::a1 , main::a2 , main::b0 , main::b1 , main::b2 , main::c0 , main::c1 , main::c2 )  --> (int)@37
	ASSIGN		@37 --> main::i
	int main::x
--------------------------------------------NEXT:0x600001898630---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898630-----------------------------------------
.4 : 
	LT		main::i , N --> (int)@38
	IF_NOT_JMP		@38 --> .5
-------------------------------------NEXT:0x6000018986c0,0x600001898750-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000018986c0-----------------------------------------
	ASSIGN		main::i --> (int)@39
	ASSIGN		@39 --> (int)@40
	ASSIGN		main::c0[@40] --> main::x
	CALL		putint ( main::x ) 
	ADD		main::i , 1 --> (int)@41
	ASSIGN		@41 --> main::i
	JMP		.4
--------------------------------------------NEXT:0x600001898630---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898750-----------------------------------------
.5 : 
	ASSIGN		10 --> main::x
	CALL		putch ( main::x ) 
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x6000018987e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000018987e0-----------------------------------------
.6 : 
	LT		main::i , N --> (int)@42
	IF_NOT_JMP		@42 --> .7
-------------------------------------NEXT:0x600001898870,0x600001898900-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898870-----------------------------------------
	ASSIGN		main::i --> (int)@43
	ASSIGN		@43 --> (int)@44
	ASSIGN		main::c1[@44] --> main::x
	CALL		putint ( main::x ) 
	ADD		main::i , 1 --> (int)@45
	ASSIGN		@45 --> main::i
	JMP		.6
--------------------------------------------NEXT:0x6000018987e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898900-----------------------------------------
.7 : 
	ASSIGN		10 --> main::x
	CALL		putch ( main::x ) 
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x600001898990---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898990-----------------------------------------
.8 : 
	LT		main::i , N --> (int)@46
	IF_NOT_JMP		@46 --> .9
-------------------------------------NEXT:0x600001898a20,0x600001898ab0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898a20-----------------------------------------
	ASSIGN		main::i --> (int)@47
	ASSIGN		@47 --> (int)@48
	ASSIGN		main::c2[@48] --> main::x
	CALL		putint ( main::x ) 
	ADD		main::i , 1 --> (int)@49
	ASSIGN		@49 --> main::i
	JMP		.8
--------------------------------------------NEXT:0x600001898990---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600001898ab0-----------------------------------------
.9 : 
	ASSIGN		10 --> main::x
	CALL		putch ( main::x ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
