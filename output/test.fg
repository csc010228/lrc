const int INF = 1879048192
int size[10]
int to[10][10]
int cap[10][10]
int rev[10][10]
int used[10]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000231c000-----------------------------------------
void my_memset ( int my_memset::arr[0] , int my_memset::val , int my_memset::n )  : 
	int my_memset::i
	ASSIGN		0 --> my_memset::i
--------------------------------------------NEXT:0x60000231c0c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c0c0-----------------------------------------
.0 : 
	LT		my_memset::i , my_memset::n --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x60000231c180,0x60000231c240-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c180-----------------------------------------
	NOP
	NOP
	ASSIGN		my_memset::val --> my_memset::arr[my_memset::i]
	ADD		my_memset::i , 1 --> (int)@3
	ASSIGN		@3 --> my_memset::i
	JMP		.0
--------------------------------------------NEXT:0x60000231c0c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c240-----------------------------------------
.1 : 
	RET

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000231c300-----------------------------------------
void add_node ( int add_node::u , int add_node::v , int add_node::c )  : 
	NOP
	NOP
	NOP
	NOP
	MUL		add_node::u , 10 --> (int)@8
	NOP
	NOP
	ADD		@8 , size[add_node::u] --> (int)@9
	ASSIGN		@9 --> (int)@15
	ASSIGN		@9 --> (int)@21
	ASSIGN		add_node::v --> to[@9]
	NOP
	NOP
	NOP
	NOP
	ASSIGN		add_node::c --> cap[@15]
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	ASSIGN		size[add_node::v] --> rev[@21]
	NOP
	NOP
	NOP
	NOP
	MUL		add_node::v , 10 --> (int)@28
	NOP
	NOP
	ADD		@28 , size[add_node::v] --> (int)@29
	ASSIGN		@29 --> (int)@35
	ASSIGN		@29 --> (int)@41
	ASSIGN		add_node::u --> to[@29]
	NOP
	NOP
	NOP
	NOP
	ASSIGN		0 --> cap[@35]
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	ASSIGN		size[add_node::u] --> rev[@41]
	NOP
	NOP
	NOP
	NOP
	ADD		size[add_node::u] , 1 --> (int)@48
	ASSIGN		@48 --> size[add_node::u]
	NOP
	NOP
	NOP
	NOP
	ADD		size[add_node::v] , 1 --> (int)@53
	ASSIGN		@53 --> size[add_node::v]
	RET

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000231c3c0-----------------------------------------
int dfs ( int dfs::s , int dfs::t , int dfs::f )  : 
	EQ		dfs::s , dfs::t --> (int)@54
	IF_NOT_JMP		@54 --> .2
-------------------------------------NEXT:0x60000231c480,0x60000231c540-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c480-----------------------------------------
	RET		dfs::f
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c540-----------------------------------------
.2 : 
	int dfs::i
	NOP
	NOP
	ASSIGN		1 --> used[dfs::s]
	ASSIGN		0 --> dfs::i
--------------------------------------------NEXT:0x60000231c600---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c600-----------------------------------------
.3 : 
	NOP
	NOP
	LT		dfs::i , size[dfs::s] --> (int)@59
	IF_NOT_JMP		@59 --> .9
-------------------------------------NEXT:0x60000231c6c0,0x60000231ce40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c6c0-----------------------------------------
	NOP
	NOP
	MUL		dfs::s , 10 --> (int)@62
	ADD		@62 , dfs::i --> (int)@63
	NOP
	ASSIGN		to[@63] --> (int)@65
	IF_NOT_JMP		used[@65] --> .4
-------------------------------------NEXT:0x60000231c780,0x60000231c840-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c780-----------------------------------------
	ADD		dfs::i , 1 --> (int)@66
	ASSIGN		@66 --> dfs::i
	JMP		.3
--------------------------------------------NEXT:0x60000231c600---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c840-----------------------------------------
.4 : 
	NOP
	NOP
	MUL		dfs::s , 10 --> (int)@69
	ADD		@69 , dfs::i --> (int)@70
	LE		cap[@70] , 0 --> (int)@71
	IF_NOT_JMP		@71 --> .5
-------------------------------------NEXT:0x60000231c900,0x60000231c9c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c900-----------------------------------------
	ADD		dfs::i , 1 --> (int)@72
	ASSIGN		@72 --> dfs::i
	JMP		.3
--------------------------------------------NEXT:0x60000231c600---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231c9c0-----------------------------------------
.5 : 
	int dfs::while_0::min_f
	NOP
	NOP
	MUL		dfs::s , 10 --> (int)@75
	ADD		@75 , dfs::i --> (int)@76
	LT		dfs::f , cap[@76] --> (int)@77
	IF_NOT_JMP		@77 --> .6
-------------------------------------NEXT:0x60000231ca80,0x60000231cb40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231ca80-----------------------------------------
	ASSIGN		dfs::f --> dfs::while_0::min_f
	JMP		.7
--------------------------------------------NEXT:0x60000231cc00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231cb40-----------------------------------------
.6 : 
	NOP
	NOP
	MUL		dfs::s , 10 --> (int)@80
	ADD		@80 , dfs::i --> (int)@81
	ASSIGN		cap[@81] --> dfs::while_0::min_f
--------------------------------------------NEXT:0x60000231cc00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231cc00-----------------------------------------
.7 : 
	int dfs::while_0::d
	NOP
	NOP
	MUL		dfs::s , 10 --> (int)@84
	ADD		@84 , dfs::i --> (int)@85
	CALL		dfs ( to[@85] , dfs::t , dfs::while_0::min_f )  --> (int)@86
	ASSIGN		@86 --> dfs::while_0::d
	GT		@86 , 0 --> (int)@87
	IF_NOT_JMP		@87 --> .8
-------------------------------------NEXT:0x60000231ccc0,0x60000231cd80-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231ccc0-----------------------------------------
	NOP
	NOP
	MUL		dfs::s , 10 --> (int)@90
	NOP
	NOP
	NOP
	NOP
	NOP
	ADD		@90 , dfs::i --> (int)@91
	ASSIGN		@91 --> (int)@95
	ASSIGN		@91 --> (int)@100
	ASSIGN		@91 --> (int)@104
	ASSIGN		@91 --> (int)@112
	ASSIGN		@91 --> (int)@116
	NOP
	NOP
	SUB		cap[@95] , dfs::while_0::d --> (int)@96
	ASSIGN		@96 --> cap[@91]
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	MUL		to[@100] , 10 --> (int)@107
	ADD		@107 , rev[@104] --> (int)@108
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	MUL		to[@112] , 10 --> (int)@119
	ADD		@119 , rev[@116] --> (int)@120
	ADD		cap[@120] , dfs::while_0::d --> (int)@121
	ASSIGN		@121 --> cap[@108]
	RET		dfs::while_0::d
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231cd80-----------------------------------------
.8 : 
	ADD		dfs::i , 1 --> (int)@122
	ASSIGN		@122 --> dfs::i
	JMP		.3
--------------------------------------------NEXT:0x60000231c600---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231ce40-----------------------------------------
.9 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000231cf00-----------------------------------------
int max_flow ( int max_flow::s , int max_flow::t )  : 
	int max_flow::flow
	ASSIGN		0 --> max_flow::flow
--------------------------------------------NEXT:0x60000231cfc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231cfc0-----------------------------------------
.10 : 
	int max_flow::while_0::f
	CALL		my_memset ( used , 0 , 10 ) 
	CALL		dfs ( max_flow::s , max_flow::t , INF )  --> (int)@123
	ASSIGN		@123 --> max_flow::while_0::f
	EQ		@123 , 0 --> (int)@124
	IF_NOT_JMP		@124 --> .11
-------------------------------------NEXT:0x60000231d080,0x60000231d140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d080-----------------------------------------
	RET		max_flow::flow
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d140-----------------------------------------
.11 : 
	ADD		max_flow::flow , max_flow::while_0::f --> (int)@125
	ASSIGN		@125 --> max_flow::flow
	JMP		.10
--------------------------------------------NEXT:0x60000231cfc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d200-----------------------------------------
.12 : 

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x60000231d2c0-----------------------------------------
int main (  )  : 
	int main::V
	int main::E
	CALL		getint (  )  --> (int)@126
	ASSIGN		@126 --> main::V
	CALL		getint (  )  --> (int)@127
	ASSIGN		@127 --> main::E
	CALL		my_memset ( size , 0 , 10 ) 
--------------------------------------------NEXT:0x60000231d380---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d380-----------------------------------------
.13 : 
	GT		main::E , 0 --> (int)@128
	IF_NOT_JMP		@128 --> .14
-------------------------------------NEXT:0x60000231d440,0x60000231d500-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d440-----------------------------------------
	int main::while_0::u
	int main::while_0::v
	int main::while_0::c
	CALL		getint (  )  --> (int)@129
	NOP
	CALL		getint (  )  --> (int)@130
	NOP
	CALL		getint (  )  --> (int)@131
	NOP
	NOP
	NOP
	NOP
	NOP
	MUL		@129 , 10 --> (int)@138
	NOP
	NOP
	ADD		@138 , size[@129] --> (int)@139
	ASSIGN		@139 --> (int)@145
	ASSIGN		@139 --> (int)@151
	ASSIGN		@130 --> to[@139]
	NOP
	NOP
	NOP
	NOP
	ASSIGN		@131 --> cap[@145]
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	ASSIGN		size[@130] --> rev[@151]
	NOP
	NOP
	NOP
	NOP
	MUL		@130 , 10 --> (int)@158
	NOP
	NOP
	ADD		@158 , size[@130] --> (int)@159
	ASSIGN		@159 --> (int)@165
	ASSIGN		@159 --> (int)@171
	ASSIGN		@129 --> to[@159]
	NOP
	NOP
	NOP
	NOP
	ASSIGN		0 --> cap[@165]
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	ASSIGN		size[@129] --> rev[@171]
	NOP
	NOP
	NOP
	NOP
	ADD		size[@129] , 1 --> (int)@178
	ASSIGN		@178 --> size[@129]
	NOP
	NOP
	NOP
	NOP
	ADD		size[@130] , 1 --> (int)@183
	ASSIGN		@183 --> size[@130]
	SUB		main::E , 1 --> (int)@132
	ASSIGN		@132 --> main::E
	JMP		.13
--------------------------------------------NEXT:0x60000231d380---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d500-----------------------------------------
.14 : 
	int main::<inline>max_flow-1::<0>
	ASSIGN		0 --> main::<inline>max_flow-1::<0>
--------------------------------------------NEXT:0x60000231d680---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d680-----------------------------------------
.15 : 
	int main::<inline>max_flow-1::<1>
	CALL		my_memset ( used , 0 , 10 ) 
	CALL		dfs ( 1 , main::V , INF )  --> (int)@184
	ASSIGN		@184 --> main::<inline>max_flow-1::<1>
	EQ		@184 , 0 --> (int)@185
	IF_NOT_JMP		@185 --> .16
-------------------------------------NEXT:0x60000231d740,0x60000231d800-------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d740-----------------------------------------
	ASSIGN		main::<inline>max_flow-1::<0> --> (int)@133
	JMP		.18
--------------------------------------------NEXT:0x60000231d980---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d800-----------------------------------------
.16 : 
	ADD		main::<inline>max_flow-1::<0> , main::<inline>max_flow-1::<1> --> (int)@186
	ASSIGN		@186 --> main::<inline>max_flow-1::<0>
	JMP		.15
--------------------------------------------NEXT:0x60000231d680---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d8c0-----------------------------------------
.17 : 
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x60000231d980-----------------------------------------
.18 : 
	CALL		putint ( @133 ) 
	CALL		putch ( 10 ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
