const int maxn = 18
const int mod = 1000000007
int dp[maxn][maxn][maxn][maxn][maxn][7]
int list[200]
int cns[20]
=========================================BASIC_BLOCK:0x6000009beaf0=========================================
int equal ( int equal::a , int equal::b )  : 
	EQ		equal::a , equal::b --> (int)@0
	IF_NOT_JMP		@0 --> .0
=========================================MAY_JUMP_TO:0x6000009beb50=========================================
=========================================BASIC_BLOCK:0x6000009beb20=========================================
	RET		1
============================================================================================================
=========================================BASIC_BLOCK:0x6000009beb50=========================================
.0 : 
	RET		0

============================================================================================================
=========================================BASIC_BLOCK:0x6000009bebb0=========================================
int dfs ( int dfs::a , int dfs::b , int dfs::c , int dfs::d , int dfs::e , int dfs::last )  : 
	CALL		putint ( 8 ) 
	CALL		putch ( 10 ) 
	MUL		dfs::last , 1 --> (int)@1
	ADD		@1 , 0 --> (int)@2
	MUL		dfs::e , 7 --> (int)@3
	ADD		@3 , @2 --> (int)@4
	MUL		dfs::d , 126 --> (int)@5
	ADD		@5 , @4 --> (int)@6
	MUL		dfs::c , 2268 --> (int)@7
	ADD		@7 , @6 --> (int)@8
	MUL		dfs::b , 40824 --> (int)@9
	ADD		@9 , @8 --> (int)@10
	MUL		dfs::a , 734832 --> (int)@11
	ADD		@11 , @10 --> (int)@12
	UEQ		dp[@12] , -1 --> (int)@13
	IF_NOT_JMP		@13 --> .1
=========================================MAY_JUMP_TO:0x6000009bec10=========================================
=========================================BASIC_BLOCK:0x6000009bebe0=========================================
	CALL		putint ( 12 ) 
	CALL		putch ( 10 ) 
	MUL		dfs::last , 1 --> (int)@14
	ADD		@14 , 0 --> (int)@15
	MUL		dfs::e , 7 --> (int)@16
	ADD		@16 , @15 --> (int)@17
	MUL		dfs::d , 126 --> (int)@18
	ADD		@18 , @17 --> (int)@19
	MUL		dfs::c , 2268 --> (int)@20
	ADD		@20 , @19 --> (int)@21
	MUL		dfs::b , 40824 --> (int)@22
	ADD		@22 , @21 --> (int)@23
	MUL		dfs::a , 734832 --> (int)@24
	ADD		@24 , @23 --> (int)@25
	RET		dp[@25]
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bec10=========================================
.1 : 
	CALL		putint ( 9 ) 
	CALL		putch ( 10 ) 
	ADD		dfs::a , dfs::b --> (int)@26
	ADD		@26 , dfs::c --> (int)@27
	ADD		@27 , dfs::d --> (int)@28
	ADD		@28 , dfs::e --> (int)@29
	EQ		@29 , 0 --> (int)@30
	IF_NOT_JMP		@30 --> .2
=========================================MAY_JUMP_TO:0x6000009beca0=========================================
=========================================BASIC_BLOCK:0x6000009bec70=========================================
	CALL		putint ( 13 ) 
	CALL		putch ( 10 ) 
	RET		1
============================================================================================================
=========================================BASIC_BLOCK:0x6000009beca0=========================================
.2 : 
	CALL		putint ( 102343 ) 
	CALL		putch ( 10 ) 
	int dfs::ans
	ASSIGN		0 --> dfs::ans
	IF_NOT_JMP		dfs::a --> .3
=========================================MAY_JUMP_TO:0x6000009bed30=========================================
=========================================BASIC_BLOCK:0x6000009bed00=========================================
	CALL		equal ( dfs::last , 2 )  --> (int)@31
	SUB		dfs::a , @31 --> (int)@32
	SUB		dfs::a , 1 --> (int)@33
	CALL		dfs ( @33 , dfs::b , dfs::c , dfs::d , dfs::e , 1 )  --> (int)@34
	MUL		@32 , @34 --> (int)@35
	ADD		dfs::ans , @35 --> (int)@36
	MOD		@36 , mod --> (int)@37
	ASSIGN		@37 --> dfs::ans
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bed30=========================================
.3 : 
	IF_NOT_JMP		dfs::b --> .4
=========================================MAY_JUMP_TO:0x6000009bedc0=========================================
=========================================BASIC_BLOCK:0x6000009bed90=========================================
	CALL		equal ( dfs::last , 3 )  --> (int)@38
	SUB		dfs::b , @38 --> (int)@39
	ADD		dfs::a , 1 --> (int)@40
	SUB		dfs::b , 1 --> (int)@41
	CALL		dfs ( @40 , @41 , dfs::c , dfs::d , dfs::e , 2 )  --> (int)@42
	MUL		@39 , @42 --> (int)@43
	ADD		dfs::ans , @43 --> (int)@44
	MOD		@44 , mod --> (int)@45
	ASSIGN		@45 --> dfs::ans
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bedc0=========================================
.4 : 
	IF_NOT_JMP		dfs::c --> .5
=========================================MAY_JUMP_TO:0x6000009bee50=========================================
=========================================BASIC_BLOCK:0x6000009bee20=========================================
	CALL		equal ( dfs::last , 4 )  --> (int)@46
	SUB		dfs::c , @46 --> (int)@47
	ADD		dfs::b , 1 --> (int)@48
	SUB		dfs::c , 1 --> (int)@49
	CALL		dfs ( dfs::a , @48 , @49 , dfs::d , dfs::e , 3 )  --> (int)@50
	MUL		@47 , @50 --> (int)@51
	ADD		dfs::ans , @51 --> (int)@52
	MOD		@52 , mod --> (int)@53
	ASSIGN		@53 --> dfs::ans
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bee50=========================================
.5 : 
	IF_NOT_JMP		dfs::d --> .6
=========================================MAY_JUMP_TO:0x6000009beee0=========================================
=========================================BASIC_BLOCK:0x6000009beeb0=========================================
	CALL		equal ( dfs::last , 5 )  --> (int)@54
	SUB		dfs::d , @54 --> (int)@55
	ADD		dfs::c , 1 --> (int)@56
	SUB		dfs::d , 1 --> (int)@57
	CALL		dfs ( dfs::a , dfs::b , @56 , @57 , dfs::e , 4 )  --> (int)@58
	MUL		@55 , @58 --> (int)@59
	ADD		dfs::ans , @59 --> (int)@60
	MOD		@60 , mod --> (int)@61
	ASSIGN		@61 --> dfs::ans
============================================================================================================
=========================================BASIC_BLOCK:0x6000009beee0=========================================
.6 : 
	IF_NOT_JMP		dfs::e --> .7
=========================================MAY_JUMP_TO:0x6000009bef70=========================================
=========================================BASIC_BLOCK:0x6000009bef40=========================================
	ADD		dfs::d , 1 --> (int)@62
	SUB		dfs::e , 1 --> (int)@63
	CALL		dfs ( dfs::a , dfs::b , dfs::c , @62 , @63 , 5 )  --> (int)@64
	MUL		dfs::e , @64 --> (int)@65
	ADD		dfs::ans , @65 --> (int)@66
	MOD		@66 , mod --> (int)@67
	ASSIGN		@67 --> dfs::ans
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bef70=========================================
.7 : 
	MUL		dfs::last , 1 --> (int)@68
	ADD		@68 , 0 --> (int)@69
	MUL		dfs::e , 7 --> (int)@70
	ADD		@70 , @69 --> (int)@71
	MUL		dfs::d , 126 --> (int)@72
	ADD		@72 , @71 --> (int)@73
	MUL		dfs::c , 2268 --> (int)@74
	ADD		@74 , @73 --> (int)@75
	MUL		dfs::b , 40824 --> (int)@76
	ADD		@76 , @75 --> (int)@77
	MUL		dfs::a , 734832 --> (int)@78
	ADD		@78 , @77 --> (int)@79
	MOD		dfs::ans , mod --> (int)@80
	ASSIGN		@80 --> dp[@79]
	CALL		putint ( 110 ) 
	CALL		putch ( 10 ) 
	MUL		dfs::last , 1 --> (int)@81
	ADD		@81 , 0 --> (int)@82
	MUL		dfs::e , 7 --> (int)@83
	ADD		@83 , @82 --> (int)@84
	MUL		dfs::d , 126 --> (int)@85
	ADD		@85 , @84 --> (int)@86
	MUL		dfs::c , 2268 --> (int)@87
	ADD		@87 , @86 --> (int)@88
	MUL		dfs::b , 40824 --> (int)@89
	ADD		@89 , @88 --> (int)@90
	MUL		dfs::a , 734832 --> (int)@91
	ADD		@91 , @90 --> (int)@92
	RET		dp[@92]

============================================================================================================
=========================================BASIC_BLOCK:0x6000009befd0=========================================
int main (  )  : 
	CALL		getint (  )  --> (int)@93
	int main::n
	ASSIGN		@93 --> main::n
	int main::i
	ASSIGN		0 --> main::i
	CALL		putint ( 3 ) 
	CALL		putch ( 10 ) 
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bf000=========================================
.8 : 
	LT		main::i , maxn --> (int)@94
	IF_NOT_JMP		@94 --> .19
=========================================MAY_JUMP_TO:0x6000009bf540=========================================
=========================================BASIC_BLOCK:0x6000009bf060=========================================
	int main::while_0::j
	ASSIGN		0 --> main::while_0::j
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bf090=========================================
.9 : 
	LT		main::while_0::j , maxn --> (int)@95
	IF_NOT_JMP		@95 --> .18
=========================================MAY_JUMP_TO:0x6000009bf4e0=========================================
=========================================BASIC_BLOCK:0x6000009bf0f0=========================================
	int main::while_0::while_0::k
	ASSIGN		0 --> main::while_0::while_0::k
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bf120=========================================
.10 : 
	LT		main::while_0::while_0::k , maxn --> (int)@96
	IF_NOT_JMP		@96 --> .17
=========================================MAY_JUMP_TO:0x6000009bf480=========================================
=========================================BASIC_BLOCK:0x6000009bf180=========================================
	int main::while_0::while_0::while_0::l
	ASSIGN		0 --> main::while_0::while_0::while_0::l
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bf1b0=========================================
.11 : 
	LT		main::while_0::while_0::while_0::l , maxn --> (int)@97
	IF_NOT_JMP		@97 --> .16
=========================================MAY_JUMP_TO:0x6000009bf420=========================================
=========================================BASIC_BLOCK:0x6000009bf210=========================================
	int main::while_0::while_0::while_0::while_0::m
	ASSIGN		0 --> main::while_0::while_0::while_0::while_0::m
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bf240=========================================
.12 : 
	LT		main::while_0::while_0::while_0::while_0::m , maxn --> (int)@98
	IF_NOT_JMP		@98 --> .15
=========================================MAY_JUMP_TO:0x6000009bf3c0=========================================
=========================================BASIC_BLOCK:0x6000009bf2a0=========================================
	int main::while_0::while_0::while_0::while_0::while_0::h
	ASSIGN		0 --> main::while_0::while_0::while_0::while_0::while_0::h
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bf2d0=========================================
.13 : 
	LT		main::while_0::while_0::while_0::while_0::while_0::h , 7 --> (int)@99
	IF_NOT_JMP		@99 --> .14
=========================================MAY_JUMP_TO:0x6000009bf360=========================================
=========================================BASIC_BLOCK:0x6000009bf330=========================================
	MUL		main::while_0::while_0::while_0::while_0::while_0::h , 1 --> (int)@100
	ADD		@100 , 0 --> (int)@101
	MUL		main::while_0::while_0::while_0::while_0::m , 7 --> (int)@102
	ADD		@102 , @101 --> (int)@103
	MUL		main::while_0::while_0::while_0::l , 126 --> (int)@104
	ADD		@104 , @103 --> (int)@105
	MUL		main::while_0::while_0::k , 2268 --> (int)@106
	ADD		@106 , @105 --> (int)@107
	MUL		main::while_0::j , 40824 --> (int)@108
	ADD		@108 , @107 --> (int)@109
	MUL		main::i , 734832 --> (int)@110
	ADD		@110 , @109 --> (int)@111
	ASSIGN		-1 --> dp[@111]
	ADD		main::while_0::while_0::while_0::while_0::while_0::h , 1 --> (int)@112
	ASSIGN		@112 --> main::while_0::while_0::while_0::while_0::while_0::h
	JMP		.13
=========================================MAY_JUMP_TO:0x6000009bf2d0=========================================
=========================================BASIC_BLOCK:0x6000009bf360=========================================
.14 : 
	ADD		main::while_0::while_0::while_0::while_0::m , 1 --> (int)@113
	ASSIGN		@113 --> main::while_0::while_0::while_0::while_0::m
	JMP		.12
=========================================MAY_JUMP_TO:0x6000009bf240=========================================
=========================================BASIC_BLOCK:0x6000009bf3c0=========================================
.15 : 
	ADD		main::while_0::while_0::while_0::l , 1 --> (int)@114
	ASSIGN		@114 --> main::while_0::while_0::while_0::l
	JMP		.11
=========================================MAY_JUMP_TO:0x6000009bf1b0=========================================
=========================================BASIC_BLOCK:0x6000009bf420=========================================
.16 : 
	ADD		main::while_0::while_0::k , 1 --> (int)@115
	ASSIGN		@115 --> main::while_0::while_0::k
	JMP		.10
=========================================MAY_JUMP_TO:0x6000009bf120=========================================
=========================================BASIC_BLOCK:0x6000009bf480=========================================
.17 : 
	ADD		main::while_0::j , 1 --> (int)@116
	ASSIGN		@116 --> main::while_0::j
	JMP		.9
=========================================MAY_JUMP_TO:0x6000009bf090=========================================
=========================================BASIC_BLOCK:0x6000009bf4e0=========================================
.18 : 
	ADD		main::i , 1 --> (int)@117
	ASSIGN		@117 --> main::i
	JMP		.8
=========================================MAY_JUMP_TO:0x6000009bf000=========================================
=========================================BASIC_BLOCK:0x6000009bf540=========================================
.19 : 
	CALL		putint ( 4 ) 
	CALL		putch ( 10 ) 
	ASSIGN		0 --> main::i
============================================================================================================
=========================================BASIC_BLOCK:0x6000009bf5a0=========================================
.20 : 
	LT		main::i , main::n --> (int)@118
	IF_NOT_JMP		@118 --> .21
=========================================MAY_JUMP_TO:0x6000009bf630=========================================
=========================================BASIC_BLOCK:0x6000009bf600=========================================
	MUL		main::i , 1 --> (int)@119
	ADD		@119 , 0 --> (int)@120
	CALL		getint (  )  --> (int)@121
	ASSIGN		@121 --> list[@120]
	MUL		main::i , 1 --> (int)@122
	ADD		@122 , 0 --> (int)@123
	MUL		list[@123] , 1 --> (int)@124
	ADD		@124 , 0 --> (int)@125
	MUL		main::i , 1 --> (int)@126
	ADD		@126 , 0 --> (int)@127
	MUL		list[@127] , 1 --> (int)@128
	ADD		@128 , 0 --> (int)@129
	ADD		cns[@129] , 1 --> (int)@130
	ASSIGN		@130 --> cns[@125]
	ADD		main::i , 1 --> (int)@131
	ASSIGN		@131 --> main::i
	JMP		.20
=========================================MAY_JUMP_TO:0x6000009bf5a0=========================================
=========================================BASIC_BLOCK:0x6000009bf630=========================================
.21 : 
	CALL		putint ( 5 ) 
	CALL		putch ( 10 ) 
	CALL		dfs ( cns[1] , cns[2] , cns[3] , cns[4] , cns[5] , 0 )  --> (int)@132
	int main::ans
	ASSIGN		@132 --> main::ans
	CALL		putint ( 6 ) 
	CALL		putch ( 10 ) 
	CALL		putint ( main::ans ) 
	CALL		putint ( 7 ) 
	CALL		putch ( 10 ) 
	RET		main::ans

============================================================================================================
