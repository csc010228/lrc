int n
int a[10000000]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000035c1ce0-----------------------------------------
void swap.void ( int swap.void::arr[0] , int swap.void::l , int swap.void::r )  : 
	int swap.void::curr
	NOP
	ASSIGN		swap.void::arr[swap.void::l] --> swap.void::curr
	NOP
	NOP
	ASSIGN		swap.void::arr[swap.void::r] --> swap.void::arr[swap.void::l]
	NOP
	ASSIGN		swap.void::curr --> swap.void::arr[swap.void::r]
	RET

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000035c00e0-----------------------------------------
int meanless_calculation ( int meanless_calculation::x , int meanless_calculation::y )  : 
	int meanless_calculation::i
	int meanless_calculation::ret
	ASSIGN		0 --> meanless_calculation::i
	ASSIGN		0 --> meanless_calculation::ret
--------------------------------------------NEXT:0x6000035c01c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c01c0-----------------------------------------
.0 : 
	LT		meanless_calculation::i , meanless_calculation::x --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x6000035c02a0,0x6000035c0460-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c02a0-----------------------------------------
	LT		meanless_calculation::i , meanless_calculation::y --> (int)@1
	IF_NOT_JMP		@1 --> .1
-------------------------------------NEXT:0x6000035c0380,0x6000035c0460-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0380-----------------------------------------
	ADD		meanless_calculation::i , 1 --> meanless_calculation::i
	ADD		meanless_calculation::ret , meanless_calculation::x --> (int)@3
	ADD		@3 , meanless_calculation::i --> meanless_calculation::ret
	JMP		.0
--------------------------------------------NEXT:0x6000035c01c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0460-----------------------------------------
.1 : 
	RET		meanless_calculation::ret

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000035c0620-----------------------------------------
int swap ( int swap::arr[0] , int swap::l , int swap::r )  : 
	int swap::curr
	int swap::<inline>meanless_calculation-0::<2>
	int swap::<inline>meanless_calculation-0::<3>
	NOP
	ASSIGN		swap::arr[swap::l] --> swap::curr
	NOP
	NOP
	ASSIGN		swap::arr[swap::r] --> swap::arr[swap::l]
	NOP
	ASSIGN		swap::curr --> swap::arr[swap::r]
	ASSIGN		0 --> swap::<inline>meanless_calculation-0::<2>
	ASSIGN		0 --> swap::<inline>meanless_calculation-0::<3>
--------------------------------------------NEXT:0x6000035c1ea0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1ea0-----------------------------------------
.14 : 
	LT		swap::<inline>meanless_calculation-0::<2> , swap::l --> (int)@56
	IF_NOT_JMP		@56 --> .15
-------------------------------------NEXT:0x6000035c1f80,0x6000035c2140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1f80-----------------------------------------
	LT		swap::<inline>meanless_calculation-0::<2> , swap::r --> (int)@57
	IF_NOT_JMP		@57 --> .15
-------------------------------------NEXT:0x6000035c2060,0x6000035c2140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c2060-----------------------------------------
	ADD		swap::<inline>meanless_calculation-0::<2> , 1 --> swap::<inline>meanless_calculation-0::<2>
	ADD		swap::<inline>meanless_calculation-0::<3> , swap::l --> (int)@58
	ADD		@58 , swap::<inline>meanless_calculation-0::<2> --> swap::<inline>meanless_calculation-0::<3>
	JMP		.14
--------------------------------------------NEXT:0x6000035c1ea0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c2140-----------------------------------------
.15 : 
	NOP
	RET		swap::<inline>meanless_calculation-0::<3>

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000035c07e0-----------------------------------------
int median ( int median::arr[0] , int median::begin , int median::end , int median::pos )  : 
	int median::pivot
	int median::l
	int median::r
	int median::xx
	NOP
	ASSIGN		median::arr[median::begin] --> median::pivot
	ASSIGN		median::begin --> median::l
	ADD		median::end , 1 --> (int)@16
	ASSIGN		@16 --> median::r
	ASSIGN		0 --> median::xx
--------------------------------------------NEXT:0x6000035c08c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c08c0-----------------------------------------
.2 : 
--------------------------------------------NEXT:0x6000035c09a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c09a0-----------------------------------------
.3 : 
	LT		median::l , median::r --> (int)@17
	IF_NOT_JMP		@17 --> .5
-------------------------------------NEXT:0x6000035c0a80,0x6000035c0d20-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0a80-----------------------------------------
	SUB		median::r , 1 --> median::r
	NOP
	LT		median::arr[median::r] , median::pivot --> (int)@21
	IF_NOT_JMP		@21 --> .4
-------------------------------------NEXT:0x6000035c0b60,0x6000035c0c40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0b60-----------------------------------------
	JMP		.5
--------------------------------------------NEXT:0x6000035c0d20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0c40-----------------------------------------
.4 : 
	ADD		median::xx , 1 --> median::xx
	JMP		.3
--------------------------------------------NEXT:0x6000035c09a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0d20-----------------------------------------
.5 : 
--------------------------------------------NEXT:0x6000035c0e00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0e00-----------------------------------------
.6 : 
	LT		median::l , median::r --> (int)@23
	IF_NOT_JMP		@23 --> .8
-------------------------------------NEXT:0x6000035c0ee0,0x6000035c1180-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0ee0-----------------------------------------
	ADD		median::l , 1 --> median::l
	NOP
	GE		median::arr[median::l] , median::pivot --> (int)@27
	IF_NOT_JMP		@27 --> .7
-------------------------------------NEXT:0x6000035c0fc0,0x6000035c10a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c0fc0-----------------------------------------
	JMP		.8
--------------------------------------------NEXT:0x6000035c1180---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c10a0-----------------------------------------
.7 : 
	SUB		median::xx , 1 --> median::xx
	JMP		.6
--------------------------------------------NEXT:0x6000035c0e00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1180-----------------------------------------
.8 : 
	EQ		median::l , median::r --> (int)@29
	IF_NOT_JMP		@29 --> .9
-------------------------------------NEXT:0x6000035c1260,0x6000035c1420-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1260-----------------------------------------
	JMP		.11
--------------------------------------------NEXT:0x6000035c15e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1340-----------------------------------------
	JMP		.10
--------------------------------------------NEXT:0x6000035c1500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1420-----------------------------------------
.9 : 
	CALL		swap.void ( median::arr , median::l , median::r ) 
--------------------------------------------NEXT:0x6000035c1500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1500-----------------------------------------
.10 : 
	JMP		.2
--------------------------------------------NEXT:0x6000035c08c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c15e0-----------------------------------------
.11 : 
	NOP
	ASSIGN		median::pivot --> median::arr[median::begin]
	CALL		swap.void ( median::arr , median::begin , median::l ) 
	GT		median::l , median::pos --> (int)@34
	IF_NOT_JMP		@34 --> .12
-------------------------------------NEXT:0x6000035c16c0,0x6000035c17a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c16c0-----------------------------------------
	CALL		median ( median::arr , median::begin , median::l , median::pos )  --> (int)@35
	RET		@35
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c17a0-----------------------------------------
.12 : 
	LT		median::l , median::pos --> (int)@36
	IF_NOT_JMP		@36 --> .13
-------------------------------------NEXT:0x6000035c1880,0x6000035c1960-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1880-----------------------------------------
	ADD		median::l , 1 --> (int)@37
	CALL		median ( median::arr , @37 , median::end , median::pos )  --> (int)@38
	RET		@38
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000035c1960-----------------------------------------
.13 : 
	RET		median::xx

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000035c1b20-----------------------------------------
int main (  )  : 
	CALL		getarray ( a )  --> n
	CALL		_sysy_starttime ( 59 ) 
	SUB		n , 1 --> (int)@40
	DIV		n , 2 --> (int)@41
	CALL		median ( a , 0 , @40 , @41 )  --> (int)@42
	CALL		_sysy_stoptime ( 61 ) 
	CALL		putarray ( n , a ) 
	NOP
	MOD		a[@41] , 256 --> (int)@46
	RET		@46

------------------------------------------------------------------------------------------------------------
============================================================================================================
