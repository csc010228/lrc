const int max = 1073741824
int a[10000000]
int b[10000000]
int kernelid[10000]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003e10000-----------------------------------------
int checkrange ( int checkrange::num )  : 
--------------------------------------------NEXT:0x600003e100c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e100c0-----------------------------------------
.0 : 
	GT		checkrange::num , max --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x600003e10180,0x600003e10240-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10180-----------------------------------------
	SUB		checkrange::num , max --> (int)@1
	ASSIGN		@1 --> checkrange::num
	JMP		.0
--------------------------------------------NEXT:0x600003e100c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10240-----------------------------------------
.1 : 
--------------------------------------------NEXT:0x600003e10300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10300-----------------------------------------
.2 : 
	LT		checkrange::num , 0 --> (int)@2
	IF_NOT_JMP		@2 --> .3
-------------------------------------NEXT:0x600003e103c0,0x600003e10480-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e103c0-----------------------------------------
	ADD		checkrange::num , max --> (int)@3
	ASSIGN		@3 --> checkrange::num
	JMP		.2
--------------------------------------------NEXT:0x600003e10300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10480-----------------------------------------
.3 : 
	RET		checkrange::num

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003e10540-----------------------------------------
int reduce ( int reduce::kernelid , int reduce::x , int reduce::y )  : 
	EQ		reduce::kernelid , 0 --> (int)@4
	IF_NOT_JMP		@4 --> .4
-------------------------------------NEXT:0x600003e10600,0x600003e106c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10600-----------------------------------------
	ADD		reduce::x , reduce::y --> (int)@5
	CALL		checkrange ( @5 )  --> (int)@6
	RET		@6
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e106c0-----------------------------------------
.4 : 
	EQ		reduce::kernelid , 1 --> (int)@7
	IF_NOT_JMP		@7 --> .9
-------------------------------------NEXT:0x600003e10780,0x600003e10cc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10780-----------------------------------------
	int reduce::if_0::ret
	ASSIGN		0 --> reduce::if_0::ret
	int reduce::if_0::i
	ASSIGN		1 --> reduce::if_0::i
--------------------------------------------NEXT:0x600003e10840---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10840-----------------------------------------
.5 : 
	LT		reduce::if_0::i , max --> (int)@8
	IF_NOT_JMP		@8 --> .8
-------------------------------------NEXT:0x600003e10900,0x600003e10c00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10900-----------------------------------------
	DIV		reduce::x , reduce::if_0::i --> (int)@9
	MOD		@9 , 2 --> (int)@10
	DIV		reduce::y , reduce::if_0::i --> (int)@11
	MOD		@11 , 2 --> (int)@12
	EQ		@10 , @12 --> (int)@13
	IF_NOT_JMP		@13 --> .6
-------------------------------------NEXT:0x600003e109c0,0x600003e10a80-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e109c0-----------------------------------------
	MUL		reduce::if_0::ret , 2 --> (int)@14
	ASSIGN		@14 --> reduce::if_0::ret
	JMP		.7
--------------------------------------------NEXT:0x600003e10b40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10a80-----------------------------------------
.6 : 
	MUL		reduce::if_0::ret , 2 --> (int)@15
	ADD		@15 , 1 --> (int)@16
	ASSIGN		@16 --> reduce::if_0::ret
--------------------------------------------NEXT:0x600003e10b40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10b40-----------------------------------------
.7 : 
	MUL		reduce::if_0::i , 2 --> (int)@17
	ASSIGN		@17 --> reduce::if_0::i
	JMP		.5
--------------------------------------------NEXT:0x600003e10840---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10c00-----------------------------------------
.8 : 
	RET		reduce::if_0::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10cc0-----------------------------------------
.9 : 
	EQ		reduce::kernelid , 2 --> (int)@18
	IF_NOT_JMP		@18 --> .12
-------------------------------------NEXT:0x600003e10d80,0x600003e11080-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10d80-----------------------------------------
	GT		reduce::x , reduce::y --> (int)@19
	IF_NOT_JMP		@19 --> .10
-------------------------------------NEXT:0x600003e10e40,0x600003e10f00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10e40-----------------------------------------
	RET		reduce::x
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10f00-----------------------------------------
.10 : 
	RET		reduce::y
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e10fc0-----------------------------------------
.11 : 
--------------------------------------------NEXT:0x600003e11080---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11080-----------------------------------------
.12 : 
	EQ		reduce::kernelid , 3 --> (int)@20
	IF_NOT_JMP		@20 --> .18
-------------------------------------NEXT:0x600003e11140,0x600003e11800-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11140-----------------------------------------
	int reduce::if_2::ret
	ASSIGN		0 --> reduce::if_2::ret
	int reduce::if_2::i
	ASSIGN		1 --> reduce::if_2::i
--------------------------------------------NEXT:0x600003e11200---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11200-----------------------------------------
.13 : 
	LT		reduce::if_2::i , max --> (int)@21
	IF_NOT_JMP		@21 --> .17
-------------------------------------NEXT:0x600003e112c0,0x600003e11740-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e112c0-----------------------------------------
	DIV		reduce::x , reduce::if_2::i --> (int)@22
	MOD		@22 , 2 --> (int)@23
	EQ		@23 , 1 --> (int)@24
	IF_JMP		@24 --> .14
-------------------------------------NEXT:0x600003e11380,0x600003e11500-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11380-----------------------------------------
	DIV		reduce::y , reduce::if_2::i --> (int)@25
	MOD		@25 , 2 --> (int)@26
	EQ		@26 , 1 --> (int)@27
	IF_JMP		@27 --> .14
-------------------------------------NEXT:0x600003e11440,0x600003e11500-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11440-----------------------------------------
	JMP		.15
--------------------------------------------NEXT:0x600003e115c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11500-----------------------------------------
.14 : 
	MUL		reduce::if_2::ret , 2 --> (int)@28
	ADD		@28 , 1 --> (int)@29
	ASSIGN		@29 --> reduce::if_2::ret
	JMP		.16
--------------------------------------------NEXT:0x600003e11680---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e115c0-----------------------------------------
.15 : 
	MUL		reduce::if_2::ret , 2 --> (int)@30
	ASSIGN		@30 --> reduce::if_2::ret
--------------------------------------------NEXT:0x600003e11680---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11680-----------------------------------------
.16 : 
	MUL		reduce::if_2::i , 2 --> (int)@31
	ASSIGN		@31 --> reduce::if_2::i
	JMP		.13
--------------------------------------------NEXT:0x600003e11200---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11740-----------------------------------------
.17 : 
	RET		reduce::if_2::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11800-----------------------------------------
.18 : 
	EQ		reduce::kernelid , 4 --> (int)@32
	IF_NOT_JMP		@32 --> .23
-------------------------------------NEXT:0x600003e118c0,0x600003e11ec0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e118c0-----------------------------------------
	int reduce::if_3::ret
	ASSIGN		0 --> reduce::if_3::ret
	int reduce::if_3::i
	ASSIGN		1 --> reduce::if_3::i
--------------------------------------------NEXT:0x600003e11980---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11980-----------------------------------------
.19 : 
	LT		reduce::if_3::i , max --> (int)@33
	IF_NOT_JMP		@33 --> .22
-------------------------------------NEXT:0x600003e11a40,0x600003e11e00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11a40-----------------------------------------
	DIV		reduce::x , reduce::if_3::i --> (int)@34
	MOD		@34 , 2 --> (int)@35
	EQ		@35 , 1 --> (int)@36
	IF_NOT_JMP		@36 --> .20
-------------------------------------NEXT:0x600003e11b00,0x600003e11c80-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11b00-----------------------------------------
	DIV		reduce::y , reduce::if_3::i --> (int)@37
	MOD		@37 , 2 --> (int)@38
	EQ		@38 , 1 --> (int)@39
	IF_NOT_JMP		@39 --> .20
-------------------------------------NEXT:0x600003e11bc0,0x600003e11c80-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11bc0-----------------------------------------
	MUL		reduce::if_3::ret , 2 --> (int)@40
	ADD		@40 , 1 --> (int)@41
	ASSIGN		@41 --> reduce::if_3::ret
	JMP		.21
--------------------------------------------NEXT:0x600003e11d40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11c80-----------------------------------------
.20 : 
	MUL		reduce::if_3::ret , 2 --> (int)@42
	ASSIGN		@42 --> reduce::if_3::ret
--------------------------------------------NEXT:0x600003e11d40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11d40-----------------------------------------
.21 : 
	MUL		reduce::if_3::i , 2 --> (int)@43
	ASSIGN		@43 --> reduce::if_3::i
	JMP		.19
--------------------------------------------NEXT:0x600003e11980---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11e00-----------------------------------------
.22 : 
	RET		reduce::if_3::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e11ec0-----------------------------------------
.23 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003e11f80-----------------------------------------
int getvalue ( int getvalue::array[0] , int getvalue::n , int getvalue::m , int getvalue::x , int getvalue::y )  : 
	LT		getvalue::x , 0 --> (int)@44
	IF_JMP		@44 --> .24
-------------------------------------NEXT:0x600003e12040,0x600003e12340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12040-----------------------------------------
	LT		getvalue::y , 0 --> (int)@45
	IF_JMP		@45 --> .24
-------------------------------------NEXT:0x600003e12100,0x600003e12340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12100-----------------------------------------
	GE		getvalue::x , getvalue::n --> (int)@46
	IF_JMP		@46 --> .24
-------------------------------------NEXT:0x600003e121c0,0x600003e12340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e121c0-----------------------------------------
	GE		getvalue::y , getvalue::m --> (int)@47
	IF_JMP		@47 --> .24
-------------------------------------NEXT:0x600003e12280,0x600003e12340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12280-----------------------------------------
	JMP		.25
--------------------------------------------NEXT:0x600003e12400---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12340-----------------------------------------
.24 : 
	RET		0
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12400-----------------------------------------
.25 : 
	MUL		getvalue::x , getvalue::m --> (int)@48
	ADD		@48 , getvalue::y --> (int)@49
	ASSIGN		@49 --> (int)@50
	ASSIGN		@50 --> (int)@51
	RET		getvalue::array[@51]

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003e124c0-----------------------------------------
int convn ( int convn::kernelid , int convn::input[0] , int convn::output[0] , int convn::n , int convn::m , int convn::c )  : 
	int convn::i
	ASSIGN		0 --> convn::i
	int convn::j
	ASSIGN		0 --> convn::j
	int convn::x
	int convn::y
	int convn::curr
	const int convn::true = 1
--------------------------------------------NEXT:0x600003e12580---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12580-----------------------------------------
.26 : 
	ASSIGN		0 --> convn::j
--------------------------------------------NEXT:0x600003e12640---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12640-----------------------------------------
.27 : 
	ASSIGN		0 --> convn::curr
	DIV		convn::c , 2 --> (int)@52
	SUB		convn::i , @52 --> (int)@53
	ASSIGN		@53 --> convn::x
--------------------------------------------NEXT:0x600003e12700---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12700-----------------------------------------
.28 : 
	DIV		convn::c , 2 --> (int)@54
	SUB		convn::j , @54 --> (int)@55
	ASSIGN		@55 --> convn::y
--------------------------------------------NEXT:0x600003e127c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e127c0-----------------------------------------
.29 : 
	CALL		getvalue ( convn::input , convn::n , convn::m , convn::x , convn::y )  --> (int)@56
	CALL		reduce ( convn::kernelid , convn::curr , @56 )  --> (int)@57
	ASSIGN		@57 --> convn::curr
	ADD		convn::y , 1 --> (int)@58
	ASSIGN		@58 --> convn::y
	DIV		convn::c , 2 --> (int)@59
	ADD		convn::j , @59 --> (int)@60
	GE		convn::y , @60 --> (int)@61
	IF_NOT_JMP		@61 --> .30
-------------------------------------NEXT:0x600003e12880,0x600003e12940-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12880-----------------------------------------
	JMP		.31
--------------------------------------------NEXT:0x600003e12a00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12940-----------------------------------------
.30 : 
	JMP		.29
--------------------------------------------NEXT:0x600003e127c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12a00-----------------------------------------
.31 : 
	ADD		convn::x , 1 --> (int)@62
	ASSIGN		@62 --> convn::x
	DIV		convn::c , 2 --> (int)@63
	ADD		convn::i , @63 --> (int)@64
	GE		convn::x , @64 --> (int)@65
	IF_NOT_JMP		@65 --> .32
-------------------------------------NEXT:0x600003e12ac0,0x600003e12b80-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12ac0-----------------------------------------
	JMP		.33
--------------------------------------------NEXT:0x600003e12c40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12b80-----------------------------------------
.32 : 
	JMP		.28
--------------------------------------------NEXT:0x600003e12700---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12c40-----------------------------------------
.33 : 
	MUL		convn::i , convn::m --> (int)@66
	ADD		@66 , convn::j --> (int)@67
	ASSIGN		@67 --> (int)@68
	ASSIGN		@68 --> (int)@69
	ASSIGN		convn::curr --> convn::output[@69]
	ADD		convn::j , 1 --> (int)@70
	ASSIGN		@70 --> convn::j
	GE		convn::j , convn::m --> (int)@71
	IF_NOT_JMP		@71 --> .34
-------------------------------------NEXT:0x600003e12d00,0x600003e12dc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12d00-----------------------------------------
	JMP		.35
--------------------------------------------NEXT:0x600003e12e80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12dc0-----------------------------------------
.34 : 
	JMP		.27
--------------------------------------------NEXT:0x600003e12640---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12e80-----------------------------------------
.35 : 
	ADD		convn::i , 1 --> (int)@72
	ASSIGN		@72 --> convn::i
	GE		convn::i , convn::n --> (int)@73
	IF_NOT_JMP		@73 --> .36
-------------------------------------NEXT:0x600003e12f40,0x600003e13000-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e12f40-----------------------------------------
	JMP		.37
--------------------------------------------NEXT:0x600003e130c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e13000-----------------------------------------
.36 : 
	JMP		.26
--------------------------------------------NEXT:0x600003e12580---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e130c0-----------------------------------------
.37 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003e13180-----------------------------------------
void memmove ( int memmove::dst[0] , int memmove::src[0] , int memmove::n )  : 
	int memmove::i
	ASSIGN		0 --> memmove::i
--------------------------------------------NEXT:0x600003e13240---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e13240-----------------------------------------
.38 : 
	LT		memmove::i , memmove::n --> (int)@74
	IF_NOT_JMP		@74 --> .39
-------------------------------------NEXT:0x600003e13300,0x600003e133c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e13300-----------------------------------------
	ASSIGN		memmove::i --> (int)@75
	ASSIGN		@75 --> (int)@76
	ASSIGN		memmove::i --> (int)@77
	ASSIGN		@77 --> (int)@78
	ASSIGN		memmove::src[@78] --> memmove::dst[@76]
	ADD		memmove::i , 1 --> (int)@79
	ASSIGN		@79 --> memmove::i
	JMP		.38
--------------------------------------------NEXT:0x600003e13240---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e133c0-----------------------------------------
.39 : 
	RET

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600003e13480-----------------------------------------
int main (  )  : 
	CALL		getint (  )  --> (int)@80
	CALL		getint (  )  --> (int)@81
	CALL		getint (  )  --> (int)@82
	int main::c
	ASSIGN		@80 --> main::c
	int main::n
	ASSIGN		@81 --> main::n
	int main::m
	ASSIGN		@82 --> main::m
	CALL		getarray ( a )  --> (int)@83
	CALL		getarray ( kernelid )  --> (int)@84
	int main::task
	ASSIGN		@84 --> main::task
	CALL		_sysy_starttime ( 111 ) 
	int main::i
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x600003e13540---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e13540-----------------------------------------
.40 : 
	LT		main::i , main::task --> (int)@85
	IF_NOT_JMP		@85 --> .41
-------------------------------------NEXT:0x600003e13600,0x600003e136c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e13600-----------------------------------------
	ASSIGN		main::i --> (int)@86
	ASSIGN		@86 --> (int)@87
	CALL		convn ( kernelid[@87] , a , b , main::n , main::m , main::c )  --> (int)@88
	MUL		main::n , main::m --> (int)@89
	CALL		memmove ( a , b , @89 ) 
	ADD		main::i , 1 --> (int)@90
	ASSIGN		@90 --> main::i
	JMP		.40
--------------------------------------------NEXT:0x600003e13540---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600003e136c0-----------------------------------------
.41 : 
	CALL		_sysy_stoptime ( 118 ) 
	MUL		main::n , main::m --> (int)@91
	CALL		putarray ( @91 , a ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
