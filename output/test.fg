int hashmod
const int maxn = 10000000
const int maxm = 10000000
int bucket[maxn]
int head[maxn]
int next[maxm]
int nextvalue[maxm]
int key[maxm]
int value[maxm]
int cnt
int keys[maxm]
int values[maxm]
int requests[maxm]
int ans[maxm]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600002b64000-----------------------------------------
int hash ( int hash::k )  : 
	MOD		hash::k , hashmod --> (int)@0
	RET		@0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600002b640c0-----------------------------------------
int insert ( int insert::k , int insert::v )  : 
	int insert::h
	MOD		insert::k , hashmod --> (int)@79
	NOP
	ASSIGN		@79 --> insert::h
	NOP
	NOP
	EQ		head[@79] , 0 --> (int)@4
	IF_NOT_JMP		@4 --> .0
-------------------------------------NEXT:0x600002b64180,0x600002b64240-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64180-----------------------------------------
	ADD		cnt , 1 --> (int)@5
	ASSIGN		@5 --> cnt
	NOP
	NOP
	ASSIGN		@5 --> head[insert::h]
	NOP
	NOP
	ASSIGN		insert::k --> key[@5]
	NOP
	NOP
	ASSIGN		insert::v --> value[@5]
	NOP
	NOP
	ASSIGN		0 --> next[@5]
	NOP
	NOP
	ASSIGN		0 --> nextvalue[@5]
	RET		0
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64240-----------------------------------------
.0 : 
	int insert::p
	NOP
	NOP
	ASSIGN		head[insert::h] --> insert::p
--------------------------------------------NEXT:0x600002b64300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64300-----------------------------------------
.1 : 
	UEQ		insert::p , 0 --> (int)@18
	IF_NOT_JMP		@18 --> .3
-------------------------------------NEXT:0x600002b643c0,0x600002b64600-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b643c0-----------------------------------------
	NOP
	NOP
	EQ		key[insert::p] , insert::k --> (int)@21
	IF_NOT_JMP		@21 --> .2
-------------------------------------NEXT:0x600002b64480,0x600002b64540-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64480-----------------------------------------
	ADD		cnt , 1 --> (int)@22
	ASSIGN		@22 --> cnt
	NOP
	NOP
	NOP
	NOP
	ASSIGN		nextvalue[insert::p] --> nextvalue[@22]
	NOP
	NOP
	ASSIGN		@22 --> nextvalue[insert::p]
	NOP
	NOP
	ASSIGN		insert::v --> value[@22]
	RET		1
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64540-----------------------------------------
.2 : 
	NOP
	NOP
	ASSIGN		next[insert::p] --> insert::p
	JMP		.1
--------------------------------------------NEXT:0x600002b64300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64600-----------------------------------------
.3 : 
	ADD		cnt , 1 --> (int)@33
	ASSIGN		@33 --> cnt
	NOP
	NOP
	NOP
	NOP
	ASSIGN		head[insert::h] --> next[@33]
	NOP
	NOP
	ASSIGN		@33 --> head[insert::h]
	NOP
	NOP
	ASSIGN		insert::k --> key[@33]
	NOP
	NOP
	ASSIGN		insert::v --> value[@33]
	NOP
	NOP
	ASSIGN		0 --> nextvalue[@33]
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600002b646c0-----------------------------------------
int reduce ( int reduce::k )  : 
	int reduce::h
	int reduce::p
	MOD		reduce::k , hashmod --> (int)@80
	NOP
	NOP
	NOP
	NOP
	ASSIGN		head[@80] --> reduce::p
--------------------------------------------NEXT:0x600002b64780---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64780-----------------------------------------
.4 : 
	UEQ		reduce::p , 0 --> (int)@49
	IF_NOT_JMP		@49 --> .8
-------------------------------------NEXT:0x600002b64840,0x600002b64cc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64840-----------------------------------------
	NOP
	NOP
	EQ		key[reduce::p] , reduce::k --> (int)@52
	IF_NOT_JMP		@52 --> .7
-------------------------------------NEXT:0x600002b64900,0x600002b64c00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64900-----------------------------------------
	int reduce::while_0::if_0::ret
	int reduce::while_0::if_0::x
	ASSIGN		0 --> reduce::while_0::if_0::ret
	ASSIGN		reduce::p --> reduce::while_0::if_0::x
--------------------------------------------NEXT:0x600002b649c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b649c0-----------------------------------------
.5 : 
	UEQ		reduce::while_0::if_0::x , 0 --> (int)@53
	IF_NOT_JMP		@53 --> .6
-------------------------------------NEXT:0x600002b64a80,0x600002b64b40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64a80-----------------------------------------
	NOP
	NOP
	ADD		reduce::while_0::if_0::ret , value[reduce::while_0::if_0::x] --> (int)@56
	ASSIGN		@56 --> reduce::while_0::if_0::ret
	NOP
	NOP
	ASSIGN		nextvalue[reduce::while_0::if_0::x] --> reduce::while_0::if_0::x
	JMP		.5
--------------------------------------------NEXT:0x600002b649c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64b40-----------------------------------------
.6 : 
	RET		reduce::while_0::if_0::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64c00-----------------------------------------
.7 : 
	NOP
	NOP
	ASSIGN		next[reduce::p] --> reduce::p
	JMP		.4
--------------------------------------------NEXT:0x600002b64780---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64cc0-----------------------------------------
.8 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600002b64d80-----------------------------------------
int main (  )  : 
	int main::ks
	int main::vs
	int main::ms
	int main::i
	CALL		getint (  )  --> (int)@61
	ASSIGN		@61 --> hashmod
	CALL		getarray ( keys )  --> (int)@62
	ASSIGN		@62 --> main::ks
	CALL		getarray ( values )  --> (int)@63
	NOP
	CALL		getarray ( requests )  --> (int)@64
	ASSIGN		@64 --> main::ms
	CALL		_sysy_starttime ( 78 ) 
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x600002b64e40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64e40-----------------------------------------
.9 : 
	LT		main::i , main::ks --> (int)@65
	IF_NOT_JMP		@65 --> .10
-------------------------------------NEXT:0x600002b64f00,0x600002b64fc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64f00-----------------------------------------
	int main::<inline>insert-0::<0>
	NOP
	ASSIGN		main::i --> (int)@67
	NOP
	ASSIGN		main::i --> (int)@69
	MOD		keys[main::i] , hashmod --> (int)@81
	NOP
	ASSIGN		@81 --> main::<inline>insert-0::<0>
	NOP
	NOP
	EQ		head[@81] , 0 --> (int)@85
	IF_NOT_JMP		@85 --> .13
-------------------------------------NEXT:0x600002b65380,0x600002b65440-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65380-----------------------------------------
	ADD		cnt , 1 --> (int)@86
	ASSIGN		@86 --> cnt
	NOP
	NOP
	ASSIGN		@86 --> head[main::<inline>insert-0::<0>]
	NOP
	NOP
	ASSIGN		keys[@67] --> key[@86]
	NOP
	NOP
	ASSIGN		values[@69] --> value[@86]
	NOP
	NOP
	ASSIGN		0 --> next[@86]
	NOP
	NOP
	ASSIGN		0 --> nextvalue[@86]
	NOP
	JMP		.17
--------------------------------------------NEXT:0x600002b658c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65440-----------------------------------------
.13 : 
	int main::<inline>insert-0::<1>
	NOP
	NOP
	ASSIGN		head[main::<inline>insert-0::<0>] --> main::<inline>insert-0::<1>
--------------------------------------------NEXT:0x600002b65500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65500-----------------------------------------
.14 : 
	UEQ		main::<inline>insert-0::<1> , 0 --> (int)@99
	IF_NOT_JMP		@99 --> .15
-------------------------------------NEXT:0x600002b655c0,0x600002b65800-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b655c0-----------------------------------------
	NOP
	NOP
	EQ		key[main::<inline>insert-0::<1>] , keys[@67] --> (int)@102
	IF_NOT_JMP		@102 --> .16
-------------------------------------NEXT:0x600002b65680,0x600002b65740-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65680-----------------------------------------
	ADD		cnt , 1 --> (int)@103
	ASSIGN		@103 --> cnt
	NOP
	NOP
	NOP
	NOP
	ASSIGN		nextvalue[main::<inline>insert-0::<1>] --> nextvalue[@103]
	NOP
	NOP
	ASSIGN		@103 --> nextvalue[main::<inline>insert-0::<1>]
	NOP
	NOP
	ASSIGN		values[@69] --> value[@103]
	NOP
	JMP		.17
--------------------------------------------NEXT:0x600002b658c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65740-----------------------------------------
.16 : 
	NOP
	NOP
	ASSIGN		next[main::<inline>insert-0::<1>] --> main::<inline>insert-0::<1>
	JMP		.14
--------------------------------------------NEXT:0x600002b65500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65800-----------------------------------------
.15 : 
	ADD		cnt , 1 --> (int)@114
	ASSIGN		@114 --> cnt
	NOP
	NOP
	NOP
	NOP
	ASSIGN		head[main::<inline>insert-0::<0>] --> next[@114]
	NOP
	NOP
	ASSIGN		@114 --> head[main::<inline>insert-0::<0>]
	NOP
	NOP
	ASSIGN		keys[@67] --> key[@114]
	NOP
	NOP
	ASSIGN		values[@69] --> value[@114]
	NOP
	NOP
	ASSIGN		0 --> nextvalue[@114]
	NOP
	JMP		.17
--------------------------------------------NEXT:0x600002b658c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b658c0-----------------------------------------
.17 : 
	ADD		main::i , 1 --> (int)@71
	ASSIGN		@71 --> main::i
	JMP		.9
--------------------------------------------NEXT:0x600002b64e40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b64fc0-----------------------------------------
.10 : 
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x600002b65080---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65080-----------------------------------------
.11 : 
	LT		main::i , main::ms --> (int)@72
	IF_NOT_JMP		@72 --> .12
-------------------------------------NEXT:0x600002b65140,0x600002b65200-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65140-----------------------------------------
	int main::<inline>reduce-1::<0>
	int main::<inline>reduce-1::<1>
	NOP
	ASSIGN		main::i --> (int)@74
	NOP
	ASSIGN		main::i --> (int)@76
	MOD		requests[main::i] , hashmod --> (int)@127
	NOP
	NOP
	NOP
	NOP
	ASSIGN		head[@127] --> main::<inline>reduce-1::<1>
--------------------------------------------NEXT:0x600002b65980---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65980-----------------------------------------
.18 : 
	UEQ		main::<inline>reduce-1::<1> , 0 --> (int)@131
	IF_NOT_JMP		@131 --> .19
-------------------------------------NEXT:0x600002b65a40,0x600002b65ec0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65a40-----------------------------------------
	NOP
	NOP
	EQ		key[main::<inline>reduce-1::<1>] , requests[@76] --> (int)@134
	IF_NOT_JMP		@134 --> .20
-------------------------------------NEXT:0x600002b65b00,0x600002b65e00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65b00-----------------------------------------
	int main::<inline>reduce-1::<2>
	int main::<inline>reduce-1::<3>
	ASSIGN		0 --> main::<inline>reduce-1::<2>
	ASSIGN		main::<inline>reduce-1::<1> --> main::<inline>reduce-1::<3>
--------------------------------------------NEXT:0x600002b65bc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65bc0-----------------------------------------
.21 : 
	UEQ		main::<inline>reduce-1::<3> , 0 --> (int)@135
	IF_NOT_JMP		@135 --> .22
-------------------------------------NEXT:0x600002b65c80,0x600002b65d40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65c80-----------------------------------------
	NOP
	NOP
	ADD		main::<inline>reduce-1::<2> , value[main::<inline>reduce-1::<3>] --> (int)@138
	ASSIGN		@138 --> main::<inline>reduce-1::<2>
	NOP
	NOP
	ASSIGN		nextvalue[main::<inline>reduce-1::<3>] --> main::<inline>reduce-1::<3>
	JMP		.21
--------------------------------------------NEXT:0x600002b65bc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65d40-----------------------------------------
.22 : 
	ASSIGN		main::<inline>reduce-1::<2> --> (int)@77
	JMP		.23
--------------------------------------------NEXT:0x600002b65f80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65e00-----------------------------------------
.20 : 
	NOP
	NOP
	ASSIGN		next[main::<inline>reduce-1::<1>] --> main::<inline>reduce-1::<1>
	JMP		.18
--------------------------------------------NEXT:0x600002b65980---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65ec0-----------------------------------------
.19 : 
	ASSIGN		0 --> (int)@77
	JMP		.23
--------------------------------------------NEXT:0x600002b65f80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65f80-----------------------------------------
.23 : 
	ASSIGN		@77 --> ans[@74]
	ADD		main::i , 1 --> (int)@78
	ASSIGN		@78 --> main::i
	JMP		.11
--------------------------------------------NEXT:0x600002b65080---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600002b65200-----------------------------------------
.12 : 
	CALL		_sysy_stoptime ( 90 ) 
	CALL		putarray ( main::ms , ans ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
