int N
int M
int L

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000ae8000-----------------------------------------
int sub ( int sub::a0[0] , int sub::a1[0] , int sub::a2[0] , int sub::b0[0] , int sub::b1[0] , int sub::b2[0] , int sub::c0[0] , int sub::c1[0] , int sub::c2[0] )  : 
	int sub::i
	ASSIGN		0 --> sub::i
--------------------------------------------NEXT:0x600000ae80c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae80c0-----------------------------------------
.0 : 
	LT		sub::i , 3 --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x600000ae8180,0x600000ae8240-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8180-----------------------------------------
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	SUB		sub::a0[sub::i] , sub::b0[sub::i] --> (int)@7
	ASSIGN		@7 --> sub::c0[sub::i]
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	SUB		sub::a1[sub::i] , sub::b1[sub::i] --> (int)@14
	ASSIGN		@14 --> sub::c1[sub::i]
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	SUB		sub::a2[sub::i] , sub::b2[sub::i] --> (int)@21
	ASSIGN		@21 --> sub::c2[sub::i]
	ADD		sub::i , 1 --> (int)@22
	ASSIGN		@22 --> sub::i
	JMP		.0
--------------------------------------------NEXT:0x600000ae80c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8240-----------------------------------------
.1 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000ae8300-----------------------------------------
int main (  )  : 
	int main::a0[3]
	int main::a1[3]
	int main::a2[3]
	int main::b0[3]
	int main::b1[3]
	int main::b2[3]
	int main::c0[6]
	int main::c1[3]
	int main::c2[3]
	int main::i
	ASSIGN		3 --> N
	ASSIGN		3 --> M
	ASSIGN		3 --> L
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x600000ae83c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae83c0-----------------------------------------
.2 : 
	LT		main::i , 3 --> (int)@23
	IF_NOT_JMP		@23 --> .3
-------------------------------------NEXT:0x600000ae8480,0x600000ae8540-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8480-----------------------------------------
	NOP
	NOP
	ASSIGN		main::i --> main::a0[main::i]
	NOP
	NOP
	ASSIGN		main::i --> main::a1[main::i]
	NOP
	NOP
	ASSIGN		main::i --> main::a2[main::i]
	NOP
	NOP
	ASSIGN		main::i --> main::b0[main::i]
	NOP
	NOP
	ASSIGN		main::i --> main::b1[main::i]
	NOP
	NOP
	ASSIGN		main::i --> main::b2[main::i]
	ADD		main::i , 1 --> (int)@36
	ASSIGN		@36 --> main::i
	JMP		.2
--------------------------------------------NEXT:0x600000ae83c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8540-----------------------------------------
.3 : 
	int main::x
	CALL		sub ( main::a0 , main::a1 , main::a2 , main::b0 , main::b1 , main::b2 , main::c0 , main::c1 , main::c2 )  --> (int)@37
	ASSIGN		@37 --> main::i
--------------------------------------------NEXT:0x600000ae8600---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8600-----------------------------------------
.4 : 
	LT		main::i , 3 --> (int)@38
	IF_NOT_JMP		@38 --> .5
-------------------------------------NEXT:0x600000ae86c0,0x600000ae8780-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae86c0-----------------------------------------
	NOP
	NOP
	NOP
	CALL		putint ( main::c0[main::i] ) 
	ADD		main::i , 1 --> (int)@41
	ASSIGN		@41 --> main::i
	JMP		.4
--------------------------------------------NEXT:0x600000ae8600---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8780-----------------------------------------
.5 : 
	NOP
	ASSIGN		0 --> main::i
	CALL		putch ( 10 ) 
--------------------------------------------NEXT:0x600000ae8840---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8840-----------------------------------------
.6 : 
	LT		main::i , 3 --> (int)@42
	IF_NOT_JMP		@42 --> .7
-------------------------------------NEXT:0x600000ae8900,0x600000ae89c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8900-----------------------------------------
	NOP
	NOP
	NOP
	CALL		putint ( main::c1[main::i] ) 
	ADD		main::i , 1 --> (int)@45
	ASSIGN		@45 --> main::i
	JMP		.6
--------------------------------------------NEXT:0x600000ae8840---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae89c0-----------------------------------------
.7 : 
	NOP
	ASSIGN		0 --> main::i
	CALL		putch ( 10 ) 
--------------------------------------------NEXT:0x600000ae8a80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8a80-----------------------------------------
.8 : 
	LT		main::i , 3 --> (int)@46
	IF_NOT_JMP		@46 --> .9
-------------------------------------NEXT:0x600000ae8b40,0x600000ae8c00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8b40-----------------------------------------
	NOP
	NOP
	NOP
	CALL		putint ( main::c2[main::i] ) 
	ADD		main::i , 1 --> (int)@49
	ASSIGN		@49 --> main::i
	JMP		.8
--------------------------------------------NEXT:0x600000ae8a80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000ae8c00-----------------------------------------
.9 : 
	NOP
	CALL		putch ( 10 ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
