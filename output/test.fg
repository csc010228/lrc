const int max = 1073741824
int a[10000000]
int b[10000000]
int kernelid[10000]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000d10000-----------------------------------------
int checkrange ( int checkrange::num )  : 
--------------------------------------------NEXT:0x600000d100e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d100e0-----------------------------------------
.0 : 
	GT		checkrange::num , max --> (int)@0
	IF_NOT_JMP		@0 --> .1
-------------------------------------NEXT:0x600000d101c0,0x600000d102a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d101c0-----------------------------------------
	SUB		checkrange::num , max --> (int)@1
	ASSIGN		@1 --> checkrange::num
	JMP		.0
--------------------------------------------NEXT:0x600000d100e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d102a0-----------------------------------------
.1 : 
--------------------------------------------NEXT:0x600000d10380---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10380-----------------------------------------
.2 : 
	LT		checkrange::num , 0 --> (int)@2
	IF_NOT_JMP		@2 --> .3
-------------------------------------NEXT:0x600000d10460,0x600000d10540-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10460-----------------------------------------
	ADD		checkrange::num , max --> (int)@3
	ASSIGN		@3 --> checkrange::num
	JMP		.2
--------------------------------------------NEXT:0x600000d10380---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10540-----------------------------------------
.3 : 
	RET		checkrange::num

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000d10620-----------------------------------------
int reduce ( int reduce::kernelid , int reduce::x , int reduce::y )  : 
	EQ		reduce::kernelid , 0 --> (int)@4
	IF_NOT_JMP		@4 --> .4
-------------------------------------NEXT:0x600000d10700,0x600000d107e0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10700-----------------------------------------
	ADD		reduce::x , reduce::y --> (int)@5
	ASSIGN		@5 --> reduce::<inline>checkrange-0::<0>
--------------------------------------------NEXT:0x600000d1c1c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c1c0-----------------------------------------
.42 : 
	GT		reduce::<inline>checkrange-0::<0> , max --> (int)@89
	IF_NOT_JMP		@89 --> .43
-------------------------------------NEXT:0x600000d1c2a0,0x600000d1c380-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c2a0-----------------------------------------
	SUB		reduce::<inline>checkrange-0::<0> , max --> (int)@90
	ASSIGN		@90 --> reduce::<inline>checkrange-0::<0>
	JMP		.42
--------------------------------------------NEXT:0x600000d1c1c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c380-----------------------------------------
.43 : 
--------------------------------------------NEXT:0x600000d1c460---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c460-----------------------------------------
.44 : 
	LT		reduce::<inline>checkrange-0::<0> , 0 --> (int)@91
	IF_NOT_JMP		@91 --> .45
-------------------------------------NEXT:0x600000d1c540,0x600000d1c620-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c540-----------------------------------------
	ADD		reduce::<inline>checkrange-0::<0> , max --> (int)@92
	ASSIGN		@92 --> reduce::<inline>checkrange-0::<0>
	JMP		.44
--------------------------------------------NEXT:0x600000d1c460---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c620-----------------------------------------
.45 : 
	NOP
	RET		reduce::<inline>checkrange-0::<0>
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d107e0-----------------------------------------
.4 : 
	EQ		reduce::kernelid , 1 --> (int)@7
	IF_NOT_JMP		@7 --> .9
-------------------------------------NEXT:0x600000d108c0,0x600000d10ee0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d108c0-----------------------------------------
	int reduce::if_0::ret
	int reduce::if_0::i
	ASSIGN		0 --> reduce::if_0::ret
	ASSIGN		1 --> reduce::if_0::i
--------------------------------------------NEXT:0x600000d109a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d109a0-----------------------------------------
.5 : 
	LT		reduce::if_0::i , max --> (int)@8
	IF_NOT_JMP		@8 --> .8
-------------------------------------NEXT:0x600000d10a80,0x600000d10e00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10a80-----------------------------------------
	DIV		reduce::x , reduce::if_0::i --> (int)@9
	MOD		@9 , 2 --> (int)@10
	DIV		reduce::y , reduce::if_0::i --> (int)@11
	MOD		@11 , 2 --> (int)@12
	EQ		@10 , @12 --> (int)@13
	IF_NOT_JMP		@13 --> .6
-------------------------------------NEXT:0x600000d10b60,0x600000d10c40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10b60-----------------------------------------
	MUL		reduce::if_0::ret , 2 --> (int)@14
	ASSIGN		@14 --> reduce::if_0::ret
	JMP		.7
--------------------------------------------NEXT:0x600000d10d20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10c40-----------------------------------------
.6 : 
	MUL		reduce::if_0::ret , 2 --> (int)@15
	ADD		@15 , 1 --> (int)@16
	ASSIGN		@16 --> reduce::if_0::ret
--------------------------------------------NEXT:0x600000d10d20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10d20-----------------------------------------
.7 : 
	MUL		reduce::if_0::i , 2 --> (int)@17
	ASSIGN		@17 --> reduce::if_0::i
	JMP		.5
--------------------------------------------NEXT:0x600000d109a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10e00-----------------------------------------
.8 : 
	RET		reduce::if_0::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10ee0-----------------------------------------
.9 : 
	EQ		reduce::kernelid , 2 --> (int)@18
	IF_NOT_JMP		@18 --> .12
-------------------------------------NEXT:0x600000d10fc0,0x600000d11340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d10fc0-----------------------------------------
	GT		reduce::x , reduce::y --> (int)@19
	IF_NOT_JMP		@19 --> .10
-------------------------------------NEXT:0x600000d110a0,0x600000d11180-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d110a0-----------------------------------------
	RET		reduce::x
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11180-----------------------------------------
.10 : 
	RET		reduce::y
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11260-----------------------------------------
.11 : 
--------------------------------------------NEXT:0x600000d11340---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11340-----------------------------------------
.12 : 
	EQ		reduce::kernelid , 3 --> (int)@20
	IF_NOT_JMP		@20 --> .18
-------------------------------------NEXT:0x600000d11420,0x600000d11c00-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11420-----------------------------------------
	int reduce::if_1::ret
	int reduce::if_1::i
	ASSIGN		0 --> reduce::if_1::ret
	ASSIGN		1 --> reduce::if_1::i
--------------------------------------------NEXT:0x600000d11500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11500-----------------------------------------
.13 : 
	LT		reduce::if_1::i , max --> (int)@21
	IF_NOT_JMP		@21 --> .17
-------------------------------------NEXT:0x600000d115e0,0x600000d11b20-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d115e0-----------------------------------------
	DIV		reduce::x , reduce::if_1::i --> (int)@22
	MOD		@22 , 2 --> (int)@23
	EQ		@23 , 1 --> (int)@24
	IF_JMP		@24 --> .14
-------------------------------------NEXT:0x600000d116c0,0x600000d11880-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d116c0-----------------------------------------
	DIV		reduce::y , reduce::if_1::i --> (int)@25
	MOD		@25 , 2 --> (int)@26
	EQ		@26 , 1 --> (int)@27
	IF_JMP		@27 --> .14
-------------------------------------NEXT:0x600000d117a0,0x600000d11880-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d117a0-----------------------------------------
	JMP		.15
--------------------------------------------NEXT:0x600000d11960---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11880-----------------------------------------
.14 : 
	MUL		reduce::if_1::ret , 2 --> (int)@28
	ADD		@28 , 1 --> (int)@29
	ASSIGN		@29 --> reduce::if_1::ret
	JMP		.16
--------------------------------------------NEXT:0x600000d11a40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11960-----------------------------------------
.15 : 
	MUL		reduce::if_1::ret , 2 --> (int)@30
	ASSIGN		@30 --> reduce::if_1::ret
--------------------------------------------NEXT:0x600000d11a40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11a40-----------------------------------------
.16 : 
	MUL		reduce::if_1::i , 2 --> (int)@31
	ASSIGN		@31 --> reduce::if_1::i
	JMP		.13
--------------------------------------------NEXT:0x600000d11500---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11b20-----------------------------------------
.17 : 
	RET		reduce::if_1::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11c00-----------------------------------------
.18 : 
	EQ		reduce::kernelid , 4 --> (int)@32
	IF_NOT_JMP		@32 --> .23
-------------------------------------NEXT:0x600000d11ce0,0x600000d123e0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11ce0-----------------------------------------
	int reduce::if_2::ret
	int reduce::if_2::i
	ASSIGN		0 --> reduce::if_2::ret
	ASSIGN		1 --> reduce::if_2::i
--------------------------------------------NEXT:0x600000d11dc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11dc0-----------------------------------------
.19 : 
	LT		reduce::if_2::i , max --> (int)@33
	IF_NOT_JMP		@33 --> .22
-------------------------------------NEXT:0x600000d11ea0,0x600000d12300-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11ea0-----------------------------------------
	DIV		reduce::x , reduce::if_2::i --> (int)@34
	MOD		@34 , 2 --> (int)@35
	EQ		@35 , 1 --> (int)@36
	IF_NOT_JMP		@36 --> .20
-------------------------------------NEXT:0x600000d11f80,0x600000d12140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d11f80-----------------------------------------
	DIV		reduce::y , reduce::if_2::i --> (int)@37
	MOD		@37 , 2 --> (int)@38
	EQ		@38 , 1 --> (int)@39
	IF_NOT_JMP		@39 --> .20
-------------------------------------NEXT:0x600000d12060,0x600000d12140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12060-----------------------------------------
	MUL		reduce::if_2::ret , 2 --> (int)@40
	ADD		@40 , 1 --> (int)@41
	ASSIGN		@41 --> reduce::if_2::ret
	JMP		.21
--------------------------------------------NEXT:0x600000d12220---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12140-----------------------------------------
.20 : 
	MUL		reduce::if_2::ret , 2 --> (int)@42
	ASSIGN		@42 --> reduce::if_2::ret
--------------------------------------------NEXT:0x600000d12220---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12220-----------------------------------------
.21 : 
	MUL		reduce::if_2::i , 2 --> (int)@43
	ASSIGN		@43 --> reduce::if_2::i
	JMP		.19
--------------------------------------------NEXT:0x600000d11dc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12300-----------------------------------------
.22 : 
	RET		reduce::if_2::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d123e0-----------------------------------------
.23 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000d124c0-----------------------------------------
int getvalue ( int getvalue::array[0] , int getvalue::n , int getvalue::m , int getvalue::x , int getvalue::y )  : 
	LT		getvalue::x , 0 --> (int)@44
	IF_JMP		@44 --> .24
-------------------------------------NEXT:0x600000d125a0,0x600000d12920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d125a0-----------------------------------------
	LT		getvalue::y , 0 --> (int)@45
	IF_JMP		@45 --> .24
-------------------------------------NEXT:0x600000d12680,0x600000d12920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12680-----------------------------------------
	GE		getvalue::x , getvalue::n --> (int)@46
	IF_JMP		@46 --> .24
-------------------------------------NEXT:0x600000d12760,0x600000d12920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12760-----------------------------------------
	GE		getvalue::y , getvalue::m --> (int)@47
	IF_JMP		@47 --> .24
-------------------------------------NEXT:0x600000d12840,0x600000d12920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12840-----------------------------------------
	JMP		.25
--------------------------------------------NEXT:0x600000d12a00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12920-----------------------------------------
.24 : 
	RET		0
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12a00-----------------------------------------
.25 : 
	MUL		getvalue::x , getvalue::m --> (int)@48
	ADD		@48 , getvalue::y --> (int)@49
	NOP
	NOP
	RET		getvalue::array[@49]

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000d12ae0-----------------------------------------
int convn ( int convn::kernelid , int convn::input[0] , int convn::output[0] , int convn::n , int convn::m , int convn::c )  : 
	int convn::i
	int convn::j
	int convn::x
	int convn::y
	int convn::curr
	const int convn::true = 1
	int convn::t0
	ASSIGN		0 --> convn::i
	ASSIGN		0 --> convn::j
	DIV		convn::c , 2 --> (int)@52
	ASSIGN		@52 --> convn::t0
--------------------------------------------NEXT:0x600000d12bc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12bc0-----------------------------------------
.26 : 
	int convn::while_0::t1
	int convn::while_0::t4
	int convn::while_0::t5
	ASSIGN		0 --> convn::j
	SUB		convn::i , convn::t0 --> (int)@53
	ADD		convn::i , convn::t0 --> (int)@54
	MUL		convn::i , convn::m --> (int)@55
	ASSIGN		@53 --> convn::while_0::t1
	ASSIGN		@54 --> convn::while_0::t4
	ASSIGN		@55 --> convn::while_0::t5
--------------------------------------------NEXT:0x600000d12ca0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12ca0-----------------------------------------
.27 : 
	int convn::while_0::while_0::t2
	int convn::while_0::while_0::t3
	ASSIGN		0 --> convn::curr
	ASSIGN		convn::while_0::t1 --> convn::x
	SUB		convn::j , convn::t0 --> (int)@56
	ADD		convn::j , convn::t0 --> (int)@57
	ASSIGN		@56 --> convn::while_0::while_0::t2
	ASSIGN		@57 --> convn::while_0::while_0::t3
--------------------------------------------NEXT:0x600000d12d80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12d80-----------------------------------------
.28 : 
	ASSIGN		convn::while_0::while_0::t2 --> convn::y
--------------------------------------------NEXT:0x600000d12e60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12e60-----------------------------------------
.29 : 
	CALL		getvalue ( convn::input , convn::n , convn::m , convn::x , convn::y )  --> (int)@58
	EQ		convn::kernelid , 0 --> (int)@93
	IF_NOT_JMP		@93 --> .46
-------------------------------------NEXT:0x600000d1c700,0x600000d1cd20-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c700-----------------------------------------
	ADD		convn::curr , @58 --> (int)@94
	ASSIGN		@94 --> convn::<inline>reduce-0::<0>
--------------------------------------------NEXT:0x600000d1c7e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c7e0-----------------------------------------
.47 : 
	GT		convn::<inline>reduce-0::<0> , max --> (int)@95
	IF_NOT_JMP		@95 --> .48
-------------------------------------NEXT:0x600000d1c8c0,0x600000d1c9a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c8c0-----------------------------------------
	SUB		convn::<inline>reduce-0::<0> , max --> (int)@96
	ASSIGN		@96 --> convn::<inline>reduce-0::<0>
	JMP		.47
--------------------------------------------NEXT:0x600000d1c7e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c9a0-----------------------------------------
.48 : 
--------------------------------------------NEXT:0x600000d1ca80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1ca80-----------------------------------------
.49 : 
	LT		convn::<inline>reduce-0::<0> , 0 --> (int)@97
	IF_NOT_JMP		@97 --> .50
-------------------------------------NEXT:0x600000d1cb60,0x600000d1cc40-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1cb60-----------------------------------------
	ADD		convn::<inline>reduce-0::<0> , max --> (int)@98
	ASSIGN		@98 --> convn::<inline>reduce-0::<0>
	JMP		.49
--------------------------------------------NEXT:0x600000d1ca80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1cc40-----------------------------------------
.50 : 
	NOP
	ASSIGN		convn::<inline>reduce-0::<0> --> (int)@59
	JMP		.70
--------------------------------------------NEXT:0x600000d1ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1cd20-----------------------------------------
.46 : 
	EQ		convn::kernelid , 1 --> (int)@100
	IF_NOT_JMP		@100 --> .51
-------------------------------------NEXT:0x600000d1ce00,0x600000d1d420-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1ce00-----------------------------------------
	int convn::<inline>reduce-0::<1>
	int convn::<inline>reduce-0::<2>
	ASSIGN		0 --> convn::<inline>reduce-0::<1>
	ASSIGN		1 --> convn::<inline>reduce-0::<2>
--------------------------------------------NEXT:0x600000d1cee0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1cee0-----------------------------------------
.52 : 
	LT		convn::<inline>reduce-0::<2> , max --> (int)@101
	IF_NOT_JMP		@101 --> .53
-------------------------------------NEXT:0x600000d1cfc0,0x600000d1d340-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1cfc0-----------------------------------------
	DIV		convn::curr , convn::<inline>reduce-0::<2> --> (int)@102
	MOD		@102 , 2 --> (int)@103
	DIV		@58 , convn::<inline>reduce-0::<2> --> (int)@104
	MOD		@104 , 2 --> (int)@105
	EQ		@103 , @105 --> (int)@106
	IF_NOT_JMP		@106 --> .54
-------------------------------------NEXT:0x600000d1d0a0,0x600000d1d180-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d0a0-----------------------------------------
	MUL		convn::<inline>reduce-0::<1> , 2 --> (int)@107
	ASSIGN		@107 --> convn::<inline>reduce-0::<1>
	JMP		.55
--------------------------------------------NEXT:0x600000d1d260---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d180-----------------------------------------
.54 : 
	MUL		convn::<inline>reduce-0::<1> , 2 --> (int)@108
	ADD		@108 , 1 --> (int)@109
	ASSIGN		@109 --> convn::<inline>reduce-0::<1>
--------------------------------------------NEXT:0x600000d1d260---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d260-----------------------------------------
.55 : 
	MUL		convn::<inline>reduce-0::<2> , 2 --> (int)@110
	ASSIGN		@110 --> convn::<inline>reduce-0::<2>
	JMP		.52
--------------------------------------------NEXT:0x600000d1cee0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d340-----------------------------------------
.53 : 
	ASSIGN		convn::<inline>reduce-0::<1> --> (int)@59
	JMP		.70
--------------------------------------------NEXT:0x600000d1ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d420-----------------------------------------
.51 : 
	EQ		convn::kernelid , 2 --> (int)@111
	IF_NOT_JMP		@111 --> .56
-------------------------------------NEXT:0x600000d1d500,0x600000d1d880-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d500-----------------------------------------
	GT		convn::curr , @58 --> (int)@112
	IF_NOT_JMP		@112 --> .57
-------------------------------------NEXT:0x600000d1d5e0,0x600000d1d6c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d5e0-----------------------------------------
	ASSIGN		convn::curr --> (int)@59
	JMP		.70
--------------------------------------------NEXT:0x600000d1ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d6c0-----------------------------------------
.57 : 
	ASSIGN		@58 --> (int)@59
	JMP		.70
--------------------------------------------NEXT:0x600000d1ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d7a0-----------------------------------------
.58 : 
--------------------------------------------NEXT:0x600000d1d880---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d880-----------------------------------------
.56 : 
	EQ		convn::kernelid , 3 --> (int)@113
	IF_NOT_JMP		@113 --> .59
-------------------------------------NEXT:0x600000d1d960,0x600000d1e140-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1d960-----------------------------------------
	int convn::<inline>reduce-0::<3>
	int convn::<inline>reduce-0::<4>
	ASSIGN		0 --> convn::<inline>reduce-0::<3>
	ASSIGN		1 --> convn::<inline>reduce-0::<4>
--------------------------------------------NEXT:0x600000d1da40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1da40-----------------------------------------
.60 : 
	LT		convn::<inline>reduce-0::<4> , max --> (int)@114
	IF_NOT_JMP		@114 --> .61
-------------------------------------NEXT:0x600000d1db20,0x600000d1e060-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1db20-----------------------------------------
	DIV		convn::curr , convn::<inline>reduce-0::<4> --> (int)@115
	MOD		@115 , 2 --> (int)@116
	EQ		@116 , 1 --> (int)@117
	IF_JMP		@117 --> .62
-------------------------------------NEXT:0x600000d1dc00,0x600000d1ddc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1dc00-----------------------------------------
	DIV		@58 , convn::<inline>reduce-0::<4> --> (int)@118
	MOD		@118 , 2 --> (int)@119
	EQ		@119 , 1 --> (int)@120
	IF_JMP		@120 --> .62
-------------------------------------NEXT:0x600000d1dce0,0x600000d1ddc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1dce0-----------------------------------------
	JMP		.63
--------------------------------------------NEXT:0x600000d1dea0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1ddc0-----------------------------------------
.62 : 
	MUL		convn::<inline>reduce-0::<3> , 2 --> (int)@121
	ADD		@121 , 1 --> (int)@122
	ASSIGN		@122 --> convn::<inline>reduce-0::<3>
	JMP		.64
--------------------------------------------NEXT:0x600000d1df80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1dea0-----------------------------------------
.63 : 
	MUL		convn::<inline>reduce-0::<3> , 2 --> (int)@123
	ASSIGN		@123 --> convn::<inline>reduce-0::<3>
--------------------------------------------NEXT:0x600000d1df80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1df80-----------------------------------------
.64 : 
	MUL		convn::<inline>reduce-0::<4> , 2 --> (int)@124
	ASSIGN		@124 --> convn::<inline>reduce-0::<4>
	JMP		.60
--------------------------------------------NEXT:0x600000d1da40---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e060-----------------------------------------
.61 : 
	ASSIGN		convn::<inline>reduce-0::<3> --> (int)@59
	JMP		.70
--------------------------------------------NEXT:0x600000d1ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e140-----------------------------------------
.59 : 
	EQ		convn::kernelid , 4 --> (int)@125
	IF_NOT_JMP		@125 --> .65
-------------------------------------NEXT:0x600000d1e220,0x600000d1e920-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e220-----------------------------------------
	int convn::<inline>reduce-0::<5>
	int convn::<inline>reduce-0::<6>
	ASSIGN		0 --> convn::<inline>reduce-0::<5>
	ASSIGN		1 --> convn::<inline>reduce-0::<6>
--------------------------------------------NEXT:0x600000d1e300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e300-----------------------------------------
.66 : 
	LT		convn::<inline>reduce-0::<6> , max --> (int)@126
	IF_NOT_JMP		@126 --> .67
-------------------------------------NEXT:0x600000d1e3e0,0x600000d1e840-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e3e0-----------------------------------------
	DIV		convn::curr , convn::<inline>reduce-0::<6> --> (int)@127
	MOD		@127 , 2 --> (int)@128
	EQ		@128 , 1 --> (int)@129
	IF_NOT_JMP		@129 --> .68
-------------------------------------NEXT:0x600000d1e4c0,0x600000d1e680-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e4c0-----------------------------------------
	DIV		@58 , convn::<inline>reduce-0::<6> --> (int)@130
	MOD		@130 , 2 --> (int)@131
	EQ		@131 , 1 --> (int)@132
	IF_NOT_JMP		@132 --> .68
-------------------------------------NEXT:0x600000d1e5a0,0x600000d1e680-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e5a0-----------------------------------------
	MUL		convn::<inline>reduce-0::<5> , 2 --> (int)@133
	ADD		@133 , 1 --> (int)@134
	ASSIGN		@134 --> convn::<inline>reduce-0::<5>
	JMP		.69
--------------------------------------------NEXT:0x600000d1e760---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e680-----------------------------------------
.68 : 
	MUL		convn::<inline>reduce-0::<5> , 2 --> (int)@135
	ASSIGN		@135 --> convn::<inline>reduce-0::<5>
--------------------------------------------NEXT:0x600000d1e760---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e760-----------------------------------------
.69 : 
	MUL		convn::<inline>reduce-0::<6> , 2 --> (int)@136
	ASSIGN		@136 --> convn::<inline>reduce-0::<6>
	JMP		.66
--------------------------------------------NEXT:0x600000d1e300---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e840-----------------------------------------
.67 : 
	ASSIGN		convn::<inline>reduce-0::<5> --> (int)@59
	JMP		.70
--------------------------------------------NEXT:0x600000d1ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1e920-----------------------------------------
.65 : 
	ASSIGN		0 --> (int)@59
	JMP		.70
--------------------------------------------NEXT:0x600000d1ea00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1ea00-----------------------------------------
.70 : 
	ASSIGN		@59 --> convn::curr
	ADD		convn::y , 1 --> (int)@60
	ASSIGN		@60 --> convn::y
	GE		@60 , convn::while_0::while_0::t3 --> (int)@61
	IF_NOT_JMP		@61 --> .30
-------------------------------------NEXT:0x600000d12f40,0x600000d13020-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d12f40-----------------------------------------
	JMP		.31
--------------------------------------------NEXT:0x600000d13100---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13020-----------------------------------------
.30 : 
	JMP		.29
--------------------------------------------NEXT:0x600000d12e60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13100-----------------------------------------
.31 : 
	ADD		convn::x , 1 --> (int)@62
	ASSIGN		@62 --> convn::x
	GE		@62 , convn::while_0::t4 --> (int)@63
	IF_NOT_JMP		@63 --> .32
-------------------------------------NEXT:0x600000d131e0,0x600000d132c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d131e0-----------------------------------------
	JMP		.33
--------------------------------------------NEXT:0x600000d133a0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d132c0-----------------------------------------
.32 : 
	JMP		.28
--------------------------------------------NEXT:0x600000d12d80---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d133a0-----------------------------------------
.33 : 
	ADD		convn::while_0::t5 , convn::j --> (int)@64
	NOP
	NOP
	ASSIGN		convn::curr --> convn::output[@64]
	ADD		convn::j , 1 --> (int)@67
	ASSIGN		@67 --> convn::j
	GE		@67 , convn::m --> (int)@68
	IF_NOT_JMP		@68 --> .34
-------------------------------------NEXT:0x600000d13480,0x600000d13560-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13480-----------------------------------------
	JMP		.35
--------------------------------------------NEXT:0x600000d13640---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13560-----------------------------------------
.34 : 
	JMP		.27
--------------------------------------------NEXT:0x600000d12ca0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13640-----------------------------------------
.35 : 
	ADD		convn::i , 1 --> (int)@69
	ASSIGN		@69 --> convn::i
	GE		@69 , convn::n --> (int)@70
	IF_NOT_JMP		@70 --> .36
-------------------------------------NEXT:0x600000d13720,0x600000d13800-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13720-----------------------------------------
	JMP		.37
--------------------------------------------NEXT:0x600000d138e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13800-----------------------------------------
.36 : 
	JMP		.26
--------------------------------------------NEXT:0x600000d12bc0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d138e0-----------------------------------------
.37 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000d139c0-----------------------------------------
void memmove ( int memmove::dst[0] , int memmove::src[0] , int memmove::n )  : 
	int memmove::i
	ASSIGN		0 --> memmove::i
--------------------------------------------NEXT:0x600000d13aa0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13aa0-----------------------------------------
.38 : 
	LT		memmove::i , memmove::n --> (int)@71
	IF_NOT_JMP		@71 --> .39
-------------------------------------NEXT:0x600000d13b80,0x600000d13c60-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13b80-----------------------------------------
	NOP
	NOP
	NOP
	NOP
	ASSIGN		memmove::src[memmove::i] --> memmove::dst[memmove::i]
	ADD		memmove::i , 1 --> (int)@76
	ASSIGN		@76 --> memmove::i
	JMP		.38
--------------------------------------------NEXT:0x600000d13aa0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13c60-----------------------------------------
.39 : 
	RET

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x600000d13d40-----------------------------------------
int main (  )  : 
	int main::c
	int main::n
	int main::m
	int main::task
	int main::i
	CALL		getint (  )  --> (int)@77
	CALL		getint (  )  --> (int)@78
	CALL		getint (  )  --> (int)@79
	ASSIGN		@77 --> main::c
	ASSIGN		@78 --> main::n
	ASSIGN		@79 --> main::m
	CALL		getarray ( a )  --> (int)@80
	CALL		getarray ( kernelid )  --> (int)@81
	ASSIGN		@81 --> main::task
	CALL		_sysy_starttime ( 112 ) 
	ASSIGN		0 --> main::i
	MUL		main::n , main::m --> (int)@86
--------------------------------------------NEXT:0x600000d13e20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13e20-----------------------------------------
.40 : 
	LT		main::i , main::task --> (int)@82
	IF_NOT_JMP		@82 --> .41
-------------------------------------NEXT:0x600000d13f00,0x600000d1c000-------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d13f00-----------------------------------------
	NOP
	NOP
	CALL		convn ( kernelid[main::i] , a , b , main::n , main::m , main::c )  --> (int)@85
	NOP
	CALL		memmove ( a , b , @86 ) 
	ADD		main::i , 1 --> (int)@87
	ASSIGN		@87 --> main::i
	JMP		.40
--------------------------------------------NEXT:0x600000d13e20---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x600000d1c000-----------------------------------------
.41 : 
	CALL		_sysy_stoptime ( 119 ) 
	MUL		main::n , main::m --> (int)@88
	CALL		putarray ( @88 , a ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
