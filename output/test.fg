int hashmod
const int maxn = 10000000
const int maxm = 10000000
int bucket[maxn]
int head[maxn]
int next[maxm]
int nextvalue[maxm]
int key[maxm]
int value[maxm]
int cnt
int keys[maxm]
int values[maxm]
int requests[maxm]
int ans[maxm]

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000038f80e0-----------------------------------------
int hash ( int hash::k )  : 
	MOD		hash::k , hashmod --> (int)@0
	RET		@0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000038f82a0-----------------------------------------
int insert ( int insert::k , int insert::v )  : 
	int insert::h
	MOD		insert::k , hashmod --> (int)@79
	NOP
	ASSIGN		@79 --> insert::h
	NOP
	EQ		head[@79] , 0 --> (int)@4
	IF_NOT_JMP		@4 --> .0
-------------------------------------NEXT:0x6000038f8380,0x6000038f8460-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8380-----------------------------------------
	ADD		cnt , 1 --> cnt
	NOP
	ASSIGN		cnt --> head[insert::h]
	NOP
	ASSIGN		insert::k --> key[cnt]
	NOP
	ASSIGN		insert::v --> value[cnt]
	NOP
	ASSIGN		0 --> next[cnt]
	NOP
	ASSIGN		0 --> nextvalue[cnt]
	RET		0
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8460-----------------------------------------
.0 : 
	int insert::p
	NOP
	ASSIGN		head[insert::h] --> insert::p
--------------------------------------------NEXT:0x6000038f8540---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8540-----------------------------------------
.1 : 
	UEQ		insert::p , 0 --> (int)@18
	IF_NOT_JMP		@18 --> .3
-------------------------------------NEXT:0x6000038f8620,0x6000038f88c0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8620-----------------------------------------
	NOP
	EQ		key[insert::p] , insert::k --> (int)@21
	IF_NOT_JMP		@21 --> .2
-------------------------------------NEXT:0x6000038f8700,0x6000038f87e0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8700-----------------------------------------
	ADD		cnt , 1 --> cnt
	NOP
	NOP
	ASSIGN		nextvalue[insert::p] --> nextvalue[cnt]
	NOP
	ASSIGN		cnt --> nextvalue[insert::p]
	NOP
	ASSIGN		insert::v --> value[cnt]
	RET		1
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f87e0-----------------------------------------
.2 : 
	NOP
	ASSIGN		next[insert::p] --> insert::p
	JMP		.1
--------------------------------------------NEXT:0x6000038f8540---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f88c0-----------------------------------------
.3 : 
	ADD		cnt , 1 --> cnt
	NOP
	NOP
	ASSIGN		head[insert::h] --> next[cnt]
	NOP
	ASSIGN		cnt --> head[insert::h]
	NOP
	ASSIGN		insert::k --> key[cnt]
	NOP
	ASSIGN		insert::v --> value[cnt]
	NOP
	ASSIGN		0 --> nextvalue[cnt]
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000038f8a80-----------------------------------------
int reduce ( int reduce::k )  : 
	int reduce::h
	int reduce::p
	MOD		reduce::k , hashmod --> (int)@80
	NOP
	NOP
	NOP
	ASSIGN		head[@80] --> reduce::p
--------------------------------------------NEXT:0x6000038f8b60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8b60-----------------------------------------
.4 : 
	UEQ		reduce::p , 0 --> (int)@49
	IF_NOT_JMP		@49 --> .8
-------------------------------------NEXT:0x6000038f8c40,0x6000038f9180-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8c40-----------------------------------------
	NOP
	EQ		key[reduce::p] , reduce::k --> (int)@52
	IF_NOT_JMP		@52 --> .7
-------------------------------------NEXT:0x6000038f8d20,0x6000038f90a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8d20-----------------------------------------
	int reduce::while_0::if_0::ret
	int reduce::while_0::if_0::x
	ASSIGN		0 --> reduce::while_0::if_0::ret
	ASSIGN		reduce::p --> reduce::while_0::if_0::x
--------------------------------------------NEXT:0x6000038f8e00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8e00-----------------------------------------
.5 : 
	UEQ		reduce::while_0::if_0::x , 0 --> (int)@53
	IF_NOT_JMP		@53 --> .6
-------------------------------------NEXT:0x6000038f8ee0,0x6000038f8fc0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8ee0-----------------------------------------
	NOP
	ADD		reduce::while_0::if_0::ret , value[reduce::while_0::if_0::x] --> reduce::while_0::if_0::ret
	NOP
	ASSIGN		nextvalue[reduce::while_0::if_0::x] --> reduce::while_0::if_0::x
	JMP		.5
--------------------------------------------NEXT:0x6000038f8e00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f8fc0-----------------------------------------
.6 : 
	RET		reduce::while_0::if_0::ret
------------------------------------------------------------------------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f90a0-----------------------------------------
.7 : 
	NOP
	ASSIGN		next[reduce::p] --> reduce::p
	JMP		.4
--------------------------------------------NEXT:0x6000038f8b60---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9180-----------------------------------------
.8 : 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================

============================================================================================================
-----------------------------------------BASIC_BLOCK:0x6000038f9340-----------------------------------------
int main (  )  : 
	int main::ks
	int main::vs
	int main::ms
	int main::i
	CALL		getint (  )  --> hashmod
	CALL		getarray ( keys )  --> (int)@62
	ASSIGN		@62 --> main::ks
	CALL		getarray ( values )  --> (int)@63
	NOP
	CALL		getarray ( requests )  --> (int)@64
	ASSIGN		@64 --> main::ms
	CALL		_sysy_starttime ( 78 ) 
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x6000038f9420---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9420-----------------------------------------
.9 : 
	LT		main::i , main::ks --> (int)@65
	IF_NOT_JMP		@65 --> .10
-------------------------------------NEXT:0x6000038f9500,0x6000038f95e0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9500-----------------------------------------
	int main::<inline>insert-0::<2>
	NOP
	NOP
	MOD		keys[main::i] , hashmod --> (int)@81
	NOP
	ASSIGN		@81 --> main::<inline>insert-0::<2>
	NOP
	EQ		head[@81] , 0 --> (int)@84
	IF_NOT_JMP		@84 --> .13
-------------------------------------NEXT:0x6000038f9a40,0x6000038f9b20-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9a40-----------------------------------------
	ADD		cnt , 1 --> cnt
	NOP
	ASSIGN		cnt --> head[main::<inline>insert-0::<2>]
	NOP
	ASSIGN		keys[main::i] --> key[cnt]
	NOP
	ASSIGN		values[main::i] --> value[cnt]
	NOP
	ASSIGN		0 --> next[cnt]
	NOP
	ASSIGN		0 --> nextvalue[cnt]
	NOP
	JMP		.17
--------------------------------------------NEXT:0x6000038fa060---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9b20-----------------------------------------
.13 : 
	int main::<inline>insert-0::<3>
	NOP
	ASSIGN		head[main::<inline>insert-0::<2>] --> main::<inline>insert-0::<3>
--------------------------------------------NEXT:0x6000038f9c00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9c00-----------------------------------------
.14 : 
	UEQ		main::<inline>insert-0::<3> , 0 --> (int)@91
	IF_NOT_JMP		@91 --> .15
-------------------------------------NEXT:0x6000038f9ce0,0x6000038f9f80-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9ce0-----------------------------------------
	NOP
	EQ		key[main::<inline>insert-0::<3>] , keys[main::i] --> (int)@93
	IF_NOT_JMP		@93 --> .16
-------------------------------------NEXT:0x6000038f9dc0,0x6000038f9ea0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9dc0-----------------------------------------
	ADD		cnt , 1 --> cnt
	NOP
	NOP
	ASSIGN		nextvalue[main::<inline>insert-0::<3>] --> nextvalue[cnt]
	NOP
	ASSIGN		cnt --> nextvalue[main::<inline>insert-0::<3>]
	NOP
	ASSIGN		values[main::i] --> value[cnt]
	NOP
	JMP		.17
--------------------------------------------NEXT:0x6000038fa060---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9ea0-----------------------------------------
.16 : 
	NOP
	ASSIGN		next[main::<inline>insert-0::<3>] --> main::<inline>insert-0::<3>
	JMP		.14
--------------------------------------------NEXT:0x6000038f9c00---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9f80-----------------------------------------
.15 : 
	ADD		cnt , 1 --> cnt
	NOP
	NOP
	ASSIGN		head[main::<inline>insert-0::<2>] --> next[cnt]
	NOP
	ASSIGN		cnt --> head[main::<inline>insert-0::<2>]
	NOP
	ASSIGN		keys[main::i] --> key[cnt]
	NOP
	ASSIGN		values[main::i] --> value[cnt]
	NOP
	ASSIGN		0 --> nextvalue[cnt]
	NOP
	JMP		.17
--------------------------------------------NEXT:0x6000038fa060---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa060-----------------------------------------
.17 : 
	ADD		main::i , 1 --> main::i
	JMP		.9
--------------------------------------------NEXT:0x6000038f9420---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f95e0-----------------------------------------
.10 : 
	ASSIGN		0 --> main::i
--------------------------------------------NEXT:0x6000038f96c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f96c0-----------------------------------------
.11 : 
	LT		main::i , main::ms --> (int)@72
	IF_NOT_JMP		@72 --> .12
-------------------------------------NEXT:0x6000038f97a0,0x6000038f9880-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f97a0-----------------------------------------
	int main::<inline>reduce-1::<1>
	int main::<inline>reduce-1::<2>
	NOP
	NOP
	MOD		requests[main::i] , hashmod --> (int)@105
	NOP
	NOP
	NOP
	ASSIGN		head[@105] --> main::<inline>reduce-1::<2>
--------------------------------------------NEXT:0x6000038fa140---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa140-----------------------------------------
.18 : 
	UEQ		main::<inline>reduce-1::<2> , 0 --> (int)@108
	IF_NOT_JMP		@108 --> .19
-------------------------------------NEXT:0x6000038fa220,0x6000038fa760-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa220-----------------------------------------
	NOP
	EQ		key[main::<inline>reduce-1::<2>] , requests[main::i] --> (int)@110
	IF_NOT_JMP		@110 --> .20
-------------------------------------NEXT:0x6000038fa300,0x6000038fa680-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa300-----------------------------------------
	int main::<inline>reduce-1::<3>
	int main::<inline>reduce-1::<4>
	ASSIGN		0 --> main::<inline>reduce-1::<3>
	ASSIGN		main::<inline>reduce-1::<2> --> main::<inline>reduce-1::<4>
--------------------------------------------NEXT:0x6000038fa3e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa3e0-----------------------------------------
.21 : 
	UEQ		main::<inline>reduce-1::<4> , 0 --> (int)@111
	IF_NOT_JMP		@111 --> .22
-------------------------------------NEXT:0x6000038fa4c0,0x6000038fa5a0-------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa4c0-----------------------------------------
	NOP
	ADD		main::<inline>reduce-1::<3> , value[main::<inline>reduce-1::<4>] --> main::<inline>reduce-1::<3>
	NOP
	ASSIGN		nextvalue[main::<inline>reduce-1::<4>] --> main::<inline>reduce-1::<4>
	JMP		.21
--------------------------------------------NEXT:0x6000038fa3e0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa5a0-----------------------------------------
.22 : 
	ASSIGN		main::<inline>reduce-1::<3> --> ans[main::i]
	JMP		.23
--------------------------------------------NEXT:0x6000038fa840---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa680-----------------------------------------
.20 : 
	NOP
	ASSIGN		next[main::<inline>reduce-1::<2>] --> main::<inline>reduce-1::<2>
	JMP		.18
--------------------------------------------NEXT:0x6000038fa140---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa760-----------------------------------------
.19 : 
	ASSIGN		0 --> ans[main::i]
	JMP		.23
--------------------------------------------NEXT:0x6000038fa840---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038fa840-----------------------------------------
.23 : 
	ADD		main::i , 1 --> main::i
	JMP		.11
--------------------------------------------NEXT:0x6000038f96c0---------------------------------------------
-----------------------------------------BASIC_BLOCK:0x6000038f9880-----------------------------------------
.12 : 
	CALL		_sysy_stoptime ( 90 ) 
	CALL		putarray ( main::ms , ans ) 
	RET		0

------------------------------------------------------------------------------------------------------------
============================================================================================================
