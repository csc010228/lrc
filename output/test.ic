int N
int M
int L
int sub ( int sub::a0[0] , int sub::a1[0] , int sub::a2[0] , int sub::b0[0] , int sub::b1[0] , int sub::b2[0] , int sub::c0[0] , int sub::c1[0] , int sub::c2[0] )  : 
	int sub::i
	ASSIGN		0 --> sub::i
.0 : 
	LT		sub::i , 3 --> (int)@0
	IF_NOT_JMP		@0 --> .1
	MUL		sub::i , 1 --> (int)@1
	ADD		@1 , 0 --> (int)@2
	MUL		sub::i , 1 --> (int)@3
	ADD		@3 , 0 --> (int)@4
	MUL		sub::i , 1 --> (int)@5
	ADD		@5 , 0 --> (int)@6
	SUB		sub::a0[@4] , sub::b0[@6] --> (int)@7
	ASSIGN		@7 --> sub::c0[@2]
	MUL		sub::i , 1 --> (int)@8
	ADD		@8 , 0 --> (int)@9
	MUL		sub::i , 1 --> (int)@10
	ADD		@10 , 0 --> (int)@11
	MUL		sub::i , 1 --> (int)@12
	ADD		@12 , 0 --> (int)@13
	SUB		sub::a1[@11] , sub::b1[@13] --> (int)@14
	ASSIGN		@14 --> sub::c1[@9]
	MUL		sub::i , 1 --> (int)@15
	ADD		@15 , 0 --> (int)@16
	MUL		sub::i , 1 --> (int)@17
	ADD		@17 , 0 --> (int)@18
	MUL		sub::i , 1 --> (int)@19
	ADD		@19 , 0 --> (int)@20
	SUB		sub::a2[@18] , sub::b2[@20] --> (int)@21
	ASSIGN		@21 --> sub::c2[@16]
	ADD		sub::i , 1 --> (int)@22
	ASSIGN		@22 --> sub::i
	JMP		.0
.1 : 
	RET		0
	RET		0

int main (  )  : 
	ASSIGN		3 --> N
	ASSIGN		3 --> M
	ASSIGN		3 --> L
	int main::a0[3]
	int main::a1[3]
	int main::a2[3]
	int main::b0[3]
	int main::b1[3]
	int main::b2[3]
	int main::c0[6]
	int main::c1[3]
	int main::c2[3]
	int main::i
	ASSIGN		0 --> main::i
.2 : 
	LT		main::i , 3 --> (int)@23
	IF_NOT_JMP		@23 --> .3
	MUL		main::i , 1 --> (int)@24
	ADD		@24 , 0 --> (int)@25
	ASSIGN		main::i --> main::a0[@25]
	MUL		main::i , 1 --> (int)@26
	ADD		@26 , 0 --> (int)@27
	ASSIGN		main::i --> main::a1[@27]
	MUL		main::i , 1 --> (int)@28
	ADD		@28 , 0 --> (int)@29
	ASSIGN		main::i --> main::a2[@29]
	MUL		main::i , 1 --> (int)@30
	ADD		@30 , 0 --> (int)@31
	ASSIGN		main::i --> main::b0[@31]
	MUL		main::i , 1 --> (int)@32
	ADD		@32 , 0 --> (int)@33
	ASSIGN		main::i --> main::b1[@33]
	MUL		main::i , 1 --> (int)@34
	ADD		@34 , 0 --> (int)@35
	ASSIGN		main::i --> main::b2[@35]
	ADD		main::i , 1 --> (int)@36
	ASSIGN		@36 --> main::i
	JMP		.2
.3 : 
	CALL		sub ( main::a0 , main::a1 , main::a2 , main::b0 , main::b1 , main::b2 , main::c0 , main::c1 , main::c2 )  --> (int)@37
	ASSIGN		@37 --> main::i
	int main::x
.4 : 
	LT		main::i , 3 --> (int)@38
	IF_NOT_JMP		@38 --> .5
	MUL		main::i , 1 --> (int)@39
	ADD		@39 , 0 --> (int)@40
	ASSIGN		main::c0[@40] --> main::x
	CALL		putint ( main::x ) 
	ADD		main::i , 1 --> (int)@41
	ASSIGN		@41 --> main::i
	JMP		.4
.5 : 
	ASSIGN		10 --> main::x
	ASSIGN		0 --> main::i
	CALL		putch ( main::x ) 
.6 : 
	LT		main::i , 3 --> (int)@42
	IF_NOT_JMP		@42 --> .7
	MUL		main::i , 1 --> (int)@43
	ADD		@43 , 0 --> (int)@44
	ASSIGN		main::c1[@44] --> main::x
	CALL		putint ( main::x ) 
	ADD		main::i , 1 --> (int)@45
	ASSIGN		@45 --> main::i
	JMP		.6
.7 : 
	ASSIGN		10 --> main::x
	ASSIGN		0 --> main::i
	CALL		putch ( main::x ) 
.8 : 
	LT		main::i , 3 --> (int)@46
	IF_NOT_JMP		@46 --> .9
	MUL		main::i , 1 --> (int)@47
	ADD		@47 , 0 --> (int)@48
	ASSIGN		main::c2[@48] --> main::x
	CALL		putint ( main::x ) 
	ADD		main::i , 1 --> (int)@49
	ASSIGN		@49 --> main::i
	JMP		.8
.9 : 
	ASSIGN		10 --> main::x
	CALL		putch ( main::x ) 
	RET		0
	RET		0

