int n
int meanless_calculation ( int meanless_calculation::x , int meanless_calculation::y )  : 
	int meanless_calculation::i
	ASSIGN		0 --> meanless_calculation::i
	int meanless_calculation::ret
	ASSIGN		0 --> meanless_calculation::ret
.0 : 
	LT		meanless_calculation::i , meanless_calculation::x --> (int)@0
	IF_NOT_JMP		@0 --> .1
	LT		meanless_calculation::i , meanless_calculation::y --> (int)@1
	IF_NOT_JMP		@1 --> .1
	ADD		meanless_calculation::i , 1 --> (int)@2
	ASSIGN		@2 --> meanless_calculation::i
	ADD		meanless_calculation::ret , meanless_calculation::x --> (int)@3
	ADD		@3 , meanless_calculation::i --> (int)@4
	ASSIGN		@4 --> meanless_calculation::ret
	JMP		.0
.1 : 
	RET		meanless_calculation::ret

int swap ( int swap::arr[0] , int swap::l , int swap::r )  : 
	MUL		swap::l , 1 --> (int)@5
	ADD		@5 , 0 --> (int)@6
	int swap::curr
	ASSIGN		swap::arr[@6] --> swap::curr
	MUL		swap::l , 1 --> (int)@7
	ADD		@7 , 0 --> (int)@8
	MUL		swap::r , 1 --> (int)@9
	ADD		@9 , 0 --> (int)@10
	ASSIGN		swap::arr[@10] --> swap::arr[@8]
	MUL		swap::r , 1 --> (int)@11
	ADD		@11 , 0 --> (int)@12
	ASSIGN		swap::curr --> swap::arr[@12]
	CALL		meanless_calculation ( swap::l , swap::r )  --> (int)@13
	RET		@13

int median ( int median::arr[0] , int median::begin , int median::end , int median::pos )  : 
	MUL		median::begin , 1 --> (int)@14
	ADD		@14 , 0 --> (int)@15
	int median::pivot
	ASSIGN		median::arr[@15] --> median::pivot
	int median::l
	ASSIGN		median::begin --> median::l
	ADD		median::end , 1 --> (int)@16
	int median::r
	ASSIGN		@16 --> median::r
	int median::xx
	ASSIGN		0 --> median::xx
.2 : 
.3 : 
	LT		median::l , median::r --> (int)@17
	IF_NOT_JMP		@17 --> .5
	SUB		median::r , 1 --> (int)@18
	ASSIGN		@18 --> median::r
	MUL		median::r , 1 --> (int)@19
	ADD		@19 , 0 --> (int)@20
	LT		median::arr[@20] , median::pivot --> (int)@21
	IF_NOT_JMP		@21 --> .4
	JMP		.5
.4 : 
	ADD		median::xx , 1 --> (int)@22
	ASSIGN		@22 --> median::xx
	JMP		.3
.5 : 
.6 : 
	LT		median::l , median::r --> (int)@23
	IF_NOT_JMP		@23 --> .8
	ADD		median::l , 1 --> (int)@24
	ASSIGN		@24 --> median::l
	MUL		median::l , 1 --> (int)@25
	ADD		@25 , 0 --> (int)@26
	GE		median::arr[@26] , median::pivot --> (int)@27
	IF_NOT_JMP		@27 --> .7
	JMP		.8
.7 : 
	SUB		median::xx , 1 --> (int)@28
	ASSIGN		@28 --> median::xx
	JMP		.6
.8 : 
	EQ		median::l , median::r --> (int)@29
	IF_NOT_JMP		@29 --> .9
	JMP		.11
	JMP		.10
.9 : 
	CALL		swap ( median::arr , median::l , median::r )  --> (int)@30
.10 : 
	JMP		.2
.11 : 
	MUL		median::begin , 1 --> (int)@31
	ADD		@31 , 0 --> (int)@32
	ASSIGN		median::pivot --> median::arr[@32]
	CALL		swap ( median::arr , median::begin , median::l )  --> (int)@33
	GT		median::l , median::pos --> (int)@34
	IF_NOT_JMP		@34 --> .12
	CALL		median ( median::arr , median::begin , median::l , median::pos )  --> (int)@35
	RET		@35
.12 : 
	LT		median::l , median::pos --> (int)@36
	IF_NOT_JMP		@36 --> .13
	ADD		median::l , 1 --> (int)@37
	CALL		median ( median::arr , @37 , median::end , median::pos )  --> (int)@38
	RET		@38
.13 : 
	RET		median::xx

int a[10000000]
int main (  )  : 
	CALL		getarray ( a )  --> (int)@39
	ASSIGN		@39 --> n
	CALL		_sysy_starttime ( 59 ) 
	SUB		n , 1 --> (int)@40
	DIV		n , 2 --> (int)@41
	CALL		median ( a , 0 , @40 , @41 )  --> (int)@42
	CALL		_sysy_stoptime ( 61 ) 
	CALL		putarray ( n , a ) 
	DIV		n , 2 --> (int)@43
	MUL		@43 , 1 --> (int)@44
	ADD		@44 , 0 --> (int)@45
	MOD		a[@45] , 256 --> (int)@46
	RET		@46

