	.arch armv7
	.eabi_attribute 28, 1
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.text
	.align 1
	.global	__aeabi_idiv
	.global	__aeabi_idivmod
	.global equal
	.syntax unified
	.thumb
	.thumb_func
	.fpu vfp
	.type	equal, %function
equal:
	push	{lr}
	nop
	push	{r0,r1}
	cmp	r0,r1
	bne	.0
	ldr r0,=1
	add	sp,sp,#8
	nop
	pop	{pc}
.0:
	ldr r0,=0
	add	sp,sp,#8
	nop
	pop	{pc}
	.size	equal, .-equal
	.text
	.align 1
	.global	__aeabi_idiv
	.global	__aeabi_idivmod
	.global dfs
	.syntax unified
	.thumb
	.thumb_func
	.fpu vfp
	.type	dfs, %function
dfs:
	push	{r4,lr}
	nop
	push	{r0,r1,r2,r3}
	sub	sp,sp,#4
	ldr r0,=8
	bl	putint
	ldr r0,=10
	bl	putch
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r2,=1
	mul	r3,r0,r2
	add	r0,r3,#0
	push	{r0}
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r2,=7
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#24
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=126
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#28
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=2268
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#32
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=40824
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#36
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=734832
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	movw	r1,#:lower16:dp
	movt	r1,#:upper16:dp
	ldr	r0,[r1,r2,lsl 2]
	push	{r3}
	ldr r3,=-1
	cmp	r0,r3
	add	sp,sp,#44
	beq	.1
	ldr r0,=12
	bl	putint
	ldr r0,=10
	bl	putch
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r2,=1
	mul	r3,r0,r2
	add	r0,r3,#0
	push	{r0}
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r2,=7
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#24
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=126
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#28
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=2268
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#32
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=40824
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#36
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=734832
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	movw	r1,#:lower16:dp
	movt	r1,#:upper16:dp
	ldr	r0,[r1,r2,lsl 2]
	add	sp,sp,#60
	nop
	pop	{r4,pc}
	add	sp,sp,#40
.1:
	ldr r0,=9
	bl	putint
	ldr r0,=10
	bl	putch
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r3,sp,#8
	ldr	r2,[r3]
	add	r4,r0,r2
	add	r1,sp,#12
	ldr	r0,[r1]
	add	r2,r4,r0
	add	r1,sp,#16
	ldr	r0,[r1]
	add	r3,r2,r0
	add	r1,sp,#124
	ldr	r0,[r1]
	push	{r2}
	add	r2,r3,r0
	cmp	r2,#0
	add	sp,sp,#4
	bne	.2
	ldr r0,=13
	bl	putint
	ldr r0,=10
	bl	putch
	ldr r0,=1
	add	sp,sp,#20
	nop
	pop	{r4,pc}
.2:
	ldr r0,=102343
	bl	putint
	ldr r0,=10
	bl	putch
	ldr r0,=0
	add	r1,sp,#0
	str	r0,[r1]
	add	r2,sp,#4
	ldr	r0,[r2]
	cmp	r0,#0
	beq	.3
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r1,=2
	bl	equal
	push	{r0}
	add	r1,sp,#8
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	sub	r4,r0,r2
	sub	r1,r0,#1
	push	{r1}
	push	{r4}
	ldr r0,=1
	push	{r0}
	add	r1,sp,#140
	ldr	r0,[r1]
	push	{r0}
	add	r1,sp,#12
	ldr	r0,[r1]
	add	r2,sp,#28
	ldr	r1,[r2]
	add	r3,sp,#32
	ldr	r2,[r3]
	add	r4,sp,#36
	ldr	r3,[r4]
	bl	dfs
	add	sp,sp,#8
	push	{r0}
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	mul	r4,r0,r2
	add	r1,sp,#16
	ldr	r0,[r1]
	add	r2,r0,r4
	push	{r2}
	mov	r0,r2
	ldr r1,=1000000007
	bl	__aeabi_idivmod
	mov	r0,r1
	push	{r1}
	add	r1,sp,#24
	str	r0,[r1]
	add	sp,sp,#24
.3:
	add	r1,sp,#8
	ldr	r0,[r1]
	cmp	r0,#0
	beq	.4
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r1,=3
	bl	equal
	push	{r0}
	add	r1,sp,#12
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	sub	r4,r0,r2
	add	r1,sp,#8
	ldr	r0,[r1]
	add	r2,r0,#1
	add	r1,sp,#12
	ldr	r0,[r1]
	push	{r2}
	sub	r2,r0,#1
	push	{r2}
	push	{r4}
	ldr r0,=2
	push	{r0}
	add	r1,sp,#144
	ldr	r0,[r1]
	push	{r0}
	add	r1,sp,#16
	ldr	r0,[r1]
	mov	r1,r2
	add	r3,sp,#36
	ldr	r2,[r3]
	add	r4,sp,#40
	ldr	r3,[r4]
	bl	dfs
	add	sp,sp,#8
	push	{r0}
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	mul	r4,r0,r2
	add	r1,sp,#20
	ldr	r0,[r1]
	add	r2,r0,r4
	push	{r2}
	mov	r0,r2
	ldr r1,=1000000007
	bl	__aeabi_idivmod
	mov	r0,r1
	push	{r1}
	add	r1,sp,#28
	str	r0,[r1]
	add	sp,sp,#28
.4:
	add	r1,sp,#12
	ldr	r0,[r1]
	cmp	r0,#0
	beq	.5
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r1,=4
	bl	equal
	push	{r0}
	add	r1,sp,#16
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	sub	r4,r0,r2
	add	r1,sp,#12
	ldr	r0,[r1]
	add	r2,r0,#1
	add	r1,sp,#16
	ldr	r0,[r1]
	push	{r2}
	sub	r2,r0,#1
	push	{r2}
	push	{r4}
	ldr r0,=3
	push	{r0}
	add	r1,sp,#144
	ldr	r0,[r1]
	push	{r0}
	add	r1,sp,#28
	ldr	r0,[r1]
	add	r2,sp,#16
	ldr	r1,[r2]
	add	r3,sp,#12
	ldr	r2,[r3]
	add	r4,sp,#40
	ldr	r3,[r4]
	bl	dfs
	add	sp,sp,#8
	push	{r0}
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	mul	r4,r0,r2
	add	r1,sp,#20
	ldr	r0,[r1]
	add	r2,r0,r4
	push	{r2}
	mov	r0,r2
	ldr r1,=1000000007
	bl	__aeabi_idivmod
	mov	r0,r1
	push	{r1}
	add	r1,sp,#28
	str	r0,[r1]
	add	sp,sp,#28
.5:
	add	r1,sp,#16
	ldr	r0,[r1]
	cmp	r0,#0
	beq	.6
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r1,=5
	bl	equal
	push	{r0}
	add	r1,sp,#20
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	sub	r4,r0,r2
	add	r1,sp,#16
	ldr	r0,[r1]
	add	r2,r0,#1
	add	r1,sp,#20
	ldr	r0,[r1]
	push	{r2}
	sub	r2,r0,#1
	push	{r2}
	push	{r4}
	ldr r0,=4
	push	{r0}
	add	r1,sp,#144
	ldr	r0,[r1]
	push	{r0}
	add	r1,sp,#28
	ldr	r0,[r1]
	add	r2,sp,#32
	ldr	r1,[r2]
	add	r3,sp,#16
	ldr	r2,[r3]
	add	r4,sp,#12
	ldr	r3,[r4]
	bl	dfs
	add	sp,sp,#8
	push	{r0}
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	mul	r4,r0,r2
	add	r1,sp,#20
	ldr	r0,[r1]
	add	r2,r0,r4
	push	{r2}
	mov	r0,r2
	ldr r1,=1000000007
	bl	__aeabi_idivmod
	mov	r0,r1
	push	{r1}
	add	r1,sp,#28
	str	r0,[r1]
	add	sp,sp,#28
.6:
	add	r1,sp,#124
	ldr	r0,[r1]
	cmp	r0,#0
	beq	.7
	add	r1,sp,#16
	ldr	r0,[r1]
	add	r2,r0,#1
	add	r1,sp,#124
	ldr	r0,[r1]
	push	{r2}
	sub	r2,r0,#1
	push	{r2}
	ldr r0,=5
	push	{r0}
	push	{r2}
	add	r1,sp,#20
	ldr	r0,[r1]
	add	r2,sp,#24
	ldr	r1,[r2]
	add	r3,sp,#28
	ldr	r2,[r3]
	add	r4,sp,#12
	ldr	r3,[r4]
	bl	dfs
	add	sp,sp,#8
	push	{r0}
	add	r1,sp,#136
	ldr	r0,[r1]
	add	r3,sp,#0
	ldr	r2,[r3]
	mul	r4,r0,r2
	add	r1,sp,#12
	ldr	r0,[r1]
	add	r2,r0,r4
	push	{r2}
	mov	r0,r2
	ldr r1,=1000000007
	bl	__aeabi_idivmod
	mov	r0,r1
	push	{r1}
	add	r1,sp,#20
	str	r0,[r1]
	add	sp,sp,#20
.7:
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r2,=1
	mul	r3,r0,r2
	add	r0,r3,#0
	push	{r0}
	add	r1,sp,#128
	ldr	r0,[r1]
	ldr r2,=7
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#24
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=126
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#28
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=2268
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#32
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=40824
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#36
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=734832
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	push	{r2}
	push	{r3}
	add	r1,sp,#48
	ldr	r0,[r1]
	ldr r1,=1000000007
	bl	__aeabi_idivmod
	mov	r0,r1
	push	{r1}
	movw	r1,#:lower16:dp
	movt	r1,#:upper16:dp
	add	r3,sp,#8
	ldr	r2,[r3]
	str	r0,[r1,r2,lsl 2]
	ldr r0,=110
	bl	putint
	ldr r0,=10
	bl	putch
	add	r1,sp,#180
	ldr	r0,[r1]
	ldr r2,=1
	mul	r3,r0,r2
	add	r0,r3,#0
	push	{r0}
	add	r1,sp,#180
	ldr	r0,[r1]
	ldr r2,=7
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#76
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=126
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#80
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=2268
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#84
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=40824
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#88
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=734832
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	movw	r1,#:lower16:dp
	movt	r1,#:upper16:dp
	ldr	r0,[r1,r2,lsl 2]
	add	sp,sp,#112
	nop
	pop	{r4,pc}
	add	sp,sp,#92
	.size	dfs, .-dfs
	.text
	.align 1
	.global	__aeabi_idiv
	.global	__aeabi_idivmod
	.global main
	.syntax unified
	.thumb
	.thumb_func
	.fpu vfp
	.type	main, %function
main:
	push	{r4,r5,r6,lr}
	nop
	sub	sp,sp,#32
	bl	getint
	mov	r1,r0
	push	{r0}
	ldr r0,=0
	add	r2,sp,#32
	str	r1,[r2]
	add	r1,sp,#28
	str	r0,[r1]
	ldr r0,=3
	bl	putint
	ldr r0,=10
	bl	putch
	add	sp,sp,#4
.8:
	add	r1,sp,#24
	ldr	r0,[r1]
	cmp	r0,#18
	bge	.19
	ldr r0,=0
	add	r1,sp,#20
	str	r0,[r1]
.9:
	add	r1,sp,#20
	ldr	r0,[r1]
	cmp	r0,#18
	bge	.18
	ldr r0,=0
	add	r1,sp,#16
	str	r0,[r1]
.10:
	add	r1,sp,#16
	ldr	r0,[r1]
	cmp	r0,#18
	bge	.17
	ldr r0,=0
	add	r1,sp,#12
	str	r0,[r1]
.11:
	add	r1,sp,#12
	ldr	r0,[r1]
	cmp	r0,#18
	bge	.16
	ldr r0,=0
	add	r1,sp,#8
	str	r0,[r1]
.12:
	add	r1,sp,#8
	ldr	r0,[r1]
	cmp	r0,#18
	bge	.15
	ldr r0,=0
	add	r1,sp,#4
	str	r0,[r1]
.13:
	add	r1,sp,#4
	ldr	r0,[r1]
	cmp	r0,#7
	bge	.14
	add	r1,sp,#4
	ldr	r0,[r1]
	ldr r2,=1
	mul	r3,r0,r2
	add	r0,r3,#0
	push	{r0}
	add	r1,sp,#12
	ldr	r0,[r1]
	ldr r2,=7
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#20
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=126
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#32
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=2268
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#44
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=40824
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	add	r1,sp,#56
	ldr	r0,[r1]
	push	{r2}
	ldr r2,=734832
	push	{r3}
	mul	r3,r0,r2
	add	r1,sp,#4
	ldr	r0,[r1]
	add	r2,r3,r0
	ldr r0,=-1
	movw	r1,#:lower16:dp
	movt	r1,#:upper16:dp
	str	r0,[r1,r2,lsl 2]
	push	{r3}
	add	r3,sp,#48
	ldr	r0,[r3]
	add	r4,r0,#1
	mov	r0,r4
	str	r0,[r3]
	add	sp,sp,#44
	b	.13
.14:
	add	r1,sp,#8
	ldr	r0,[r1]
	add	r2,r0,#1
	mov	r0,r2
	str	r0,[r1]
	b	.12
.15:
	add	r1,sp,#12
	ldr	r0,[r1]
	add	r2,r0,#1
	mov	r0,r2
	str	r0,[r1]
	b	.11
.16:
	add	r1,sp,#16
	ldr	r0,[r1]
	add	r2,r0,#1
	mov	r0,r2
	str	r0,[r1]
	b	.10
.17:
	add	r1,sp,#20
	ldr	r0,[r1]
	add	r2,r0,#1
	mov	r0,r2
	str	r0,[r1]
	b	.9
.18:
	add	r1,sp,#24
	ldr	r0,[r1]
	add	r2,r0,#1
	mov	r0,r2
	str	r0,[r1]
	b	.8
.19:
	ldr r0,=4
	bl	putint
	ldr r0,=10
	bl	putch
	ldr r0,=0
	add	r1,sp,#24
	str	r0,[r1]
.20:
	add	r1,sp,#24
	ldr	r0,[r1]
	add	r3,sp,#28
	ldr	r2,[r3]
	cmp	r0,r2
	bge	.21
	add	r1,sp,#24
	ldr	r0,[r1]
	ldr r2,=1
	mul	r3,r0,r2
	add	r0,r3,#0
	push	{r0}
	push	{r3}
	bl	getint
	mov	r1,r0
	push	{r0}
	movw	r2,#:lower16:list
	movt	r2,#:upper16:list
	add	r4,sp,#8
	ldr	r3,[r4]
	str	r1,[r2,r3,lsl 2]
	add	r1,sp,#36
	ldr	r0,[r1]
	ldr r5,=1
	mul	r6,r0,r5
	add	r0,r6,#0
	push	{r0}
	add	r3,sp,#0
	ldr	r1,[r3]
	ldr	r0,[r2,r1,lsl 2]
	mul	r4,r0,r5
	add	r0,r4,#0
	push	{r0}
	add	r1,sp,#44
	ldr	r0,[r1]
	mul	r2,r0,r5
	add	r0,r2,#0
	push	{r0}
	movw	r1,#:lower16:list
	movt	r1,#:upper16:list
	push	{r2}
	add	r3,sp,#4
	ldr	r2,[r3]
	ldr	r0,[r1,r2,lsl 2]
	push	{r4}
	mul	r4,r0,r5
	add	r0,r4,#0
	push	{r0}
	movw	r1,#:lower16:cns
	movt	r1,#:upper16:cns
	add	r3,sp,#0
	ldr	r2,[r3]
	ldr	r0,[r1,r2,lsl 2]
	push	{r4}
	add	r4,r0,#1
	mov	r0,r4
	add	r3,sp,#20
	ldr	r2,[r3]
	str	r0,[r1,r2,lsl 2]
	push	{r4}
	add	r4,sp,#68
	ldr	r0,[r4]
	add	r5,r0,#1
	mov	r0,r5
	str	r0,[r4]
	add	sp,sp,#44
	b	.20
.21:
	ldr r0,=5
	bl	putint
	ldr r0,=10
	bl	putch
	ldr r0,=0
	push	{r0}
	movw	r1,#:lower16:cns
	movt	r1,#:upper16:cns
	ldr	r0,[r1,#20]
	push	{r0}
	ldr	r0,[r1,#4]
	movw	r2,#:lower16:cns
	movt	r2,#:upper16:cns
	ldr	r1,[r2,#8]
	movw	r3,#:lower16:cns
	movt	r3,#:upper16:cns
	ldr	r2,[r3,#12]
	movw	r4,#:lower16:cns
	movt	r4,#:upper16:cns
	ldr	r3,[r4,#16]
	bl	dfs
	add	sp,sp,#8
	mov	r1,r0
	push	{r0}
	add	r0,sp,#4
	str	r1,[r0]
	ldr r0,=6
	bl	putint
	ldr r0,=10
	bl	putch
	add	r1,sp,#4
	ldr	r0,[r1]
	bl	putint
	ldr r0,=7
	bl	putint
	ldr r0,=10
	bl	putch
	add	r1,sp,#4
	ldr	r0,[r1]
	add	sp,sp,#36
	nop
	pop	{r4,r5,r6,pc}
	add	sp,sp,#4
	.size	main, .-main
	.comm dp,52907904,4
	.comm list,800,4
	.comm cns,80,4
	.ident	"GCC: (Raspbian 8.3.0-6+rpi1) 8.3.0"
	.section	.note.GNU-stack,"",%progbits
